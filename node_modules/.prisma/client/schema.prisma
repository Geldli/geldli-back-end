// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id    Int    @id @default(autoincrement())
  nome  String
  email String @unique
  senha String
  foto  Bytes?

  despesas           Despesa[]
  despesasContinuas  DespesaContinua[]
  ativos             Ativo[]
  ativosContinuos    AtivoContinuo[]
  categoriasAtivos   CategoriaAtivo[]
  categoriasDespesas CategoriaDespesa[]
}

model Despesa {
  id        Int      @id @default(autoincrement())
  data      DateTime @db.Date
  valor     Float
  nome      String
  descricao String

  categoria   CategoriaDespesa @relation(fields: [idCategoria], references: [id])
  idCategoria String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int
}

model DespesaContinua {
  id           Int      @id @default(autoincrement())
  data         DateTime @db.Date
  valor        Float
  nome         String
  descricao    String
  mesComeco    Int
  diaPagamento Int
  anualmente   Boolean

  categoria   CategoriaDespesa @relation(fields: [idCategoria], references: [id])
  idCategoria String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int
}

model CategoriaDespesa {
  id    String @id
  cores String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int

  despesasContinuas DespesaContinua[]
  despesas          Despesa[]
}

model Ativo {
  id        Int      @id @default(autoincrement())
  data      DateTime
  valor     Float
  nome      String
  descricao String

  categoria   CategoriaAtivo @relation(fields: [idCategoria], references: [id])
  idCategoria String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int
}

model AtivoContinuo {
  id           Int      @id @default(autoincrement())
  data         DateTime @db.Date
  valor        Float
  nome         String
  descricao    String
  mesComeco    Int
  diaPagamento Int
  anualmente   Boolean

  categoria   CategoriaAtivo @relation(fields: [idCategoria], references: [id])
  idCategoria String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int
}

model CategoriaAtivo {
  id    String @id
  cores String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  idUsuario Int

  ativosContinuos AtivoContinuo[]
  ativos          Ativo[]
}
