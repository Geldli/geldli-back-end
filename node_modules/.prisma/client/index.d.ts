
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Despesa
 * 
 */
export type Despesa = $Result.DefaultSelection<Prisma.$DespesaPayload>
/**
 * Model DespesaContinua
 * 
 */
export type DespesaContinua = $Result.DefaultSelection<Prisma.$DespesaContinuaPayload>
/**
 * Model CategoriaDespesa
 * 
 */
export type CategoriaDespesa = $Result.DefaultSelection<Prisma.$CategoriaDespesaPayload>
/**
 * Model Ativo
 * 
 */
export type Ativo = $Result.DefaultSelection<Prisma.$AtivoPayload>
/**
 * Model AtivoContinuo
 * 
 */
export type AtivoContinuo = $Result.DefaultSelection<Prisma.$AtivoContinuoPayload>
/**
 * Model CategoriaAtivo
 * 
 */
export type CategoriaAtivo = $Result.DefaultSelection<Prisma.$CategoriaAtivoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.despesa`: Exposes CRUD operations for the **Despesa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Despesas
    * const despesas = await prisma.despesa.findMany()
    * ```
    */
  get despesa(): Prisma.DespesaDelegate<ExtArgs>;

  /**
   * `prisma.despesaContinua`: Exposes CRUD operations for the **DespesaContinua** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DespesaContinuas
    * const despesaContinuas = await prisma.despesaContinua.findMany()
    * ```
    */
  get despesaContinua(): Prisma.DespesaContinuaDelegate<ExtArgs>;

  /**
   * `prisma.categoriaDespesa`: Exposes CRUD operations for the **CategoriaDespesa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaDespesas
    * const categoriaDespesas = await prisma.categoriaDespesa.findMany()
    * ```
    */
  get categoriaDespesa(): Prisma.CategoriaDespesaDelegate<ExtArgs>;

  /**
   * `prisma.ativo`: Exposes CRUD operations for the **Ativo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ativos
    * const ativos = await prisma.ativo.findMany()
    * ```
    */
  get ativo(): Prisma.AtivoDelegate<ExtArgs>;

  /**
   * `prisma.ativoContinuo`: Exposes CRUD operations for the **AtivoContinuo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AtivoContinuos
    * const ativoContinuos = await prisma.ativoContinuo.findMany()
    * ```
    */
  get ativoContinuo(): Prisma.AtivoContinuoDelegate<ExtArgs>;

  /**
   * `prisma.categoriaAtivo`: Exposes CRUD operations for the **CategoriaAtivo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaAtivos
    * const categoriaAtivos = await prisma.categoriaAtivo.findMany()
    * ```
    */
  get categoriaAtivo(): Prisma.CategoriaAtivoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Despesa: 'Despesa',
    DespesaContinua: 'DespesaContinua',
    CategoriaDespesa: 'CategoriaDespesa',
    Ativo: 'Ativo',
    AtivoContinuo: 'AtivoContinuo',
    CategoriaAtivo: 'CategoriaAtivo'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'usuario' | 'despesa' | 'despesaContinua' | 'categoriaDespesa' | 'ativo' | 'ativoContinuo' | 'categoriaAtivo'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Despesa: {
        payload: Prisma.$DespesaPayload<ExtArgs>
        fields: Prisma.DespesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DespesaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DespesaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          findFirst: {
            args: Prisma.DespesaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DespesaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          findMany: {
            args: Prisma.DespesaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>[]
          }
          create: {
            args: Prisma.DespesaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          createMany: {
            args: Prisma.DespesaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DespesaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>[]
          }
          delete: {
            args: Prisma.DespesaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          update: {
            args: Prisma.DespesaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          deleteMany: {
            args: Prisma.DespesaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DespesaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DespesaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          aggregate: {
            args: Prisma.DespesaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDespesa>
          }
          groupBy: {
            args: Prisma.DespesaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DespesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DespesaCountArgs<ExtArgs>,
            result: $Utils.Optional<DespesaCountAggregateOutputType> | number
          }
        }
      }
      DespesaContinua: {
        payload: Prisma.$DespesaContinuaPayload<ExtArgs>
        fields: Prisma.DespesaContinuaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DespesaContinuaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DespesaContinuaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          findFirst: {
            args: Prisma.DespesaContinuaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DespesaContinuaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          findMany: {
            args: Prisma.DespesaContinuaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>[]
          }
          create: {
            args: Prisma.DespesaContinuaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          createMany: {
            args: Prisma.DespesaContinuaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DespesaContinuaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>[]
          }
          delete: {
            args: Prisma.DespesaContinuaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          update: {
            args: Prisma.DespesaContinuaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          deleteMany: {
            args: Prisma.DespesaContinuaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DespesaContinuaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DespesaContinuaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DespesaContinuaPayload>
          }
          aggregate: {
            args: Prisma.DespesaContinuaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDespesaContinua>
          }
          groupBy: {
            args: Prisma.DespesaContinuaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DespesaContinuaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DespesaContinuaCountArgs<ExtArgs>,
            result: $Utils.Optional<DespesaContinuaCountAggregateOutputType> | number
          }
        }
      }
      CategoriaDespesa: {
        payload: Prisma.$CategoriaDespesaPayload<ExtArgs>
        fields: Prisma.CategoriaDespesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaDespesaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaDespesaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaDespesaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaDespesaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          findMany: {
            args: Prisma.CategoriaDespesaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>[]
          }
          create: {
            args: Prisma.CategoriaDespesaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          createMany: {
            args: Prisma.CategoriaDespesaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaDespesaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDespesaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          update: {
            args: Prisma.CategoriaDespesaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDespesaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaDespesaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriaDespesaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaDespesaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaDespesaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoriaDespesa>
          }
          groupBy: {
            args: Prisma.CategoriaDespesaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaDespesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaDespesaCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaDespesaCountAggregateOutputType> | number
          }
        }
      }
      Ativo: {
        payload: Prisma.$AtivoPayload<ExtArgs>
        fields: Prisma.AtivoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AtivoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AtivoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          findFirst: {
            args: Prisma.AtivoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AtivoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          findMany: {
            args: Prisma.AtivoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>[]
          }
          create: {
            args: Prisma.AtivoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          createMany: {
            args: Prisma.AtivoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AtivoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>[]
          }
          delete: {
            args: Prisma.AtivoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          update: {
            args: Prisma.AtivoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          deleteMany: {
            args: Prisma.AtivoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AtivoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AtivoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoPayload>
          }
          aggregate: {
            args: Prisma.AtivoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAtivo>
          }
          groupBy: {
            args: Prisma.AtivoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AtivoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AtivoCountArgs<ExtArgs>,
            result: $Utils.Optional<AtivoCountAggregateOutputType> | number
          }
        }
      }
      AtivoContinuo: {
        payload: Prisma.$AtivoContinuoPayload<ExtArgs>
        fields: Prisma.AtivoContinuoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AtivoContinuoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AtivoContinuoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          findFirst: {
            args: Prisma.AtivoContinuoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AtivoContinuoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          findMany: {
            args: Prisma.AtivoContinuoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>[]
          }
          create: {
            args: Prisma.AtivoContinuoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          createMany: {
            args: Prisma.AtivoContinuoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AtivoContinuoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>[]
          }
          delete: {
            args: Prisma.AtivoContinuoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          update: {
            args: Prisma.AtivoContinuoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          deleteMany: {
            args: Prisma.AtivoContinuoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AtivoContinuoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AtivoContinuoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AtivoContinuoPayload>
          }
          aggregate: {
            args: Prisma.AtivoContinuoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAtivoContinuo>
          }
          groupBy: {
            args: Prisma.AtivoContinuoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AtivoContinuoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AtivoContinuoCountArgs<ExtArgs>,
            result: $Utils.Optional<AtivoContinuoCountAggregateOutputType> | number
          }
        }
      }
      CategoriaAtivo: {
        payload: Prisma.$CategoriaAtivoPayload<ExtArgs>
        fields: Prisma.CategoriaAtivoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaAtivoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaAtivoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          findFirst: {
            args: Prisma.CategoriaAtivoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaAtivoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          findMany: {
            args: Prisma.CategoriaAtivoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>[]
          }
          create: {
            args: Prisma.CategoriaAtivoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          createMany: {
            args: Prisma.CategoriaAtivoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaAtivoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>[]
          }
          delete: {
            args: Prisma.CategoriaAtivoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          update: {
            args: Prisma.CategoriaAtivoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaAtivoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaAtivoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriaAtivoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriaAtivoPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAtivoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoriaAtivo>
          }
          groupBy: {
            args: Prisma.CategoriaAtivoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaAtivoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaAtivoCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaAtivoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    despesas: number
    despesasContinuas: number
    ativos: number
    ativosContinuos: number
    categoriasAtivos: number
    categoriasDespesas: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    despesas?: boolean | UsuarioCountOutputTypeCountDespesasArgs
    despesasContinuas?: boolean | UsuarioCountOutputTypeCountDespesasContinuasArgs
    ativos?: boolean | UsuarioCountOutputTypeCountAtivosArgs
    ativosContinuos?: boolean | UsuarioCountOutputTypeCountAtivosContinuosArgs
    categoriasAtivos?: boolean | UsuarioCountOutputTypeCountCategoriasAtivosArgs
    categoriasDespesas?: boolean | UsuarioCountOutputTypeCountCategoriasDespesasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDespesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDespesasContinuasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaContinuaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAtivosContinuosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoContinuoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCategoriasAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaAtivoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCategoriasDespesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaDespesaWhereInput
  }


  /**
   * Count Type CategoriaDespesaCountOutputType
   */

  export type CategoriaDespesaCountOutputType = {
    despesasContinuas: number
    despesas: number
  }

  export type CategoriaDespesaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    despesasContinuas?: boolean | CategoriaDespesaCountOutputTypeCountDespesasContinuasArgs
    despesas?: boolean | CategoriaDespesaCountOutputTypeCountDespesasArgs
  }

  // Custom InputTypes
  /**
   * CategoriaDespesaCountOutputType without action
   */
  export type CategoriaDespesaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesaCountOutputType
     */
    select?: CategoriaDespesaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaDespesaCountOutputType without action
   */
  export type CategoriaDespesaCountOutputTypeCountDespesasContinuasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaContinuaWhereInput
  }

  /**
   * CategoriaDespesaCountOutputType without action
   */
  export type CategoriaDespesaCountOutputTypeCountDespesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaWhereInput
  }


  /**
   * Count Type CategoriaAtivoCountOutputType
   */

  export type CategoriaAtivoCountOutputType = {
    ativosContinuos: number
    ativos: number
  }

  export type CategoriaAtivoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ativosContinuos?: boolean | CategoriaAtivoCountOutputTypeCountAtivosContinuosArgs
    ativos?: boolean | CategoriaAtivoCountOutputTypeCountAtivosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaAtivoCountOutputType without action
   */
  export type CategoriaAtivoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivoCountOutputType
     */
    select?: CategoriaAtivoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaAtivoCountOutputType without action
   */
  export type CategoriaAtivoCountOutputTypeCountAtivosContinuosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoContinuoWhereInput
  }

  /**
   * CategoriaAtivoCountOutputType without action
   */
  export type CategoriaAtivoCountOutputTypeCountAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    username: string | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    senha: string | null
    foto: Buffer | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    username: string | null
    nome: string | null
    sobrenome: string | null
    email: string | null
    senha: string | null
    foto: Buffer | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    username: number
    nome: number
    sobrenome: number
    email: number
    senha: number
    foto: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    username?: true
    nome?: true
    sobrenome?: true
    email?: true
    senha?: true
    foto?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    username?: true
    nome?: true
    sobrenome?: true
    email?: true
    senha?: true
    foto?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    username?: true
    nome?: true
    sobrenome?: true
    email?: true
    senha?: true
    foto?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto: Buffer | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    senha?: boolean
    foto?: boolean
    despesas?: boolean | Usuario$despesasArgs<ExtArgs>
    despesasContinuas?: boolean | Usuario$despesasContinuasArgs<ExtArgs>
    ativos?: boolean | Usuario$ativosArgs<ExtArgs>
    ativosContinuos?: boolean | Usuario$ativosContinuosArgs<ExtArgs>
    categoriasAtivos?: boolean | Usuario$categoriasAtivosArgs<ExtArgs>
    categoriasDespesas?: boolean | Usuario$categoriasDespesasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    username?: boolean
    nome?: boolean
    sobrenome?: boolean
    email?: boolean
    senha?: boolean
    foto?: boolean
  }


  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    despesas?: boolean | Usuario$despesasArgs<ExtArgs>
    despesasContinuas?: boolean | Usuario$despesasContinuasArgs<ExtArgs>
    ativos?: boolean | Usuario$ativosArgs<ExtArgs>
    ativosContinuos?: boolean | Usuario$ativosContinuosArgs<ExtArgs>
    categoriasAtivos?: boolean | Usuario$categoriasAtivosArgs<ExtArgs>
    categoriasDespesas?: boolean | Usuario$categoriasDespesasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      despesas: Prisma.$DespesaPayload<ExtArgs>[]
      despesasContinuas: Prisma.$DespesaContinuaPayload<ExtArgs>[]
      ativos: Prisma.$AtivoPayload<ExtArgs>[]
      ativosContinuos: Prisma.$AtivoContinuoPayload<ExtArgs>[]
      categoriasAtivos: Prisma.$CategoriaAtivoPayload<ExtArgs>[]
      categoriasDespesas: Prisma.$CategoriaDespesaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      nome: string
      sobrenome: string
      email: string
      senha: string
      foto: Buffer | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }


  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UsuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
    **/
    create<T extends UsuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends UsuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
    **/
    delete<T extends UsuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
    **/
    upsert<T extends UsuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    despesas<T extends Usuario$despesasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$despesasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findMany'> | Null>;

    despesasContinuas<T extends Usuario$despesasContinuasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$despesasContinuasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findMany'> | Null>;

    ativos<T extends Usuario$ativosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ativosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findMany'> | Null>;

    ativosContinuos<T extends Usuario$ativosContinuosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ativosContinuosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findMany'> | Null>;

    categoriasAtivos<T extends Usuario$categoriasAtivosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$categoriasAtivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findMany'> | Null>;

    categoriasDespesas<T extends Usuario$categoriasDespesasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$categoriasDespesasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly username: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly sobrenome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly senha: FieldRef<"Usuario", 'String'>
    readonly foto: FieldRef<"Usuario", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.despesas
   */
  export type Usuario$despesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    where?: DespesaWhereInput
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    cursor?: DespesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Usuario.despesasContinuas
   */
  export type Usuario$despesasContinuasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    where?: DespesaContinuaWhereInput
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    cursor?: DespesaContinuaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DespesaContinuaScalarFieldEnum | DespesaContinuaScalarFieldEnum[]
  }

  /**
   * Usuario.ativos
   */
  export type Usuario$ativosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    where?: AtivoWhereInput
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    cursor?: AtivoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtivoScalarFieldEnum | AtivoScalarFieldEnum[]
  }

  /**
   * Usuario.ativosContinuos
   */
  export type Usuario$ativosContinuosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    where?: AtivoContinuoWhereInput
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    cursor?: AtivoContinuoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtivoContinuoScalarFieldEnum | AtivoContinuoScalarFieldEnum[]
  }

  /**
   * Usuario.categoriasAtivos
   */
  export type Usuario$categoriasAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    where?: CategoriaAtivoWhereInput
    orderBy?: CategoriaAtivoOrderByWithRelationInput | CategoriaAtivoOrderByWithRelationInput[]
    cursor?: CategoriaAtivoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaAtivoScalarFieldEnum | CategoriaAtivoScalarFieldEnum[]
  }

  /**
   * Usuario.categoriasDespesas
   */
  export type Usuario$categoriasDespesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    where?: CategoriaDespesaWhereInput
    orderBy?: CategoriaDespesaOrderByWithRelationInput | CategoriaDespesaOrderByWithRelationInput[]
    cursor?: CategoriaDespesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaDespesaScalarFieldEnum | CategoriaDespesaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Despesa
   */

  export type AggregateDespesa = {
    _count: DespesaCountAggregateOutputType | null
    _avg: DespesaAvgAggregateOutputType | null
    _sum: DespesaSumAggregateOutputType | null
    _min: DespesaMinAggregateOutputType | null
    _max: DespesaMaxAggregateOutputType | null
  }

  export type DespesaAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    idUsuario: number | null
  }

  export type DespesaSumAggregateOutputType = {
    id: number | null
    valor: number | null
    idUsuario: number | null
  }

  export type DespesaMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type DespesaMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type DespesaCountAggregateOutputType = {
    id: number
    data: number
    valor: number
    nome: number
    descricao: number
    idCategoria: number
    idUsuario: number
    _all: number
  }


  export type DespesaAvgAggregateInputType = {
    id?: true
    valor?: true
    idUsuario?: true
  }

  export type DespesaSumAggregateInputType = {
    id?: true
    valor?: true
    idUsuario?: true
  }

  export type DespesaMinAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type DespesaMaxAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type DespesaCountAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
    _all?: true
  }

  export type DespesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Despesa to aggregate.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Despesas
    **/
    _count?: true | DespesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DespesaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DespesaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DespesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DespesaMaxAggregateInputType
  }

  export type GetDespesaAggregateType<T extends DespesaAggregateArgs> = {
        [P in keyof T & keyof AggregateDespesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDespesa[P]>
      : GetScalarType<T[P], AggregateDespesa[P]>
  }




  export type DespesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaWhereInput
    orderBy?: DespesaOrderByWithAggregationInput | DespesaOrderByWithAggregationInput[]
    by: DespesaScalarFieldEnum[] | DespesaScalarFieldEnum
    having?: DespesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DespesaCountAggregateInputType | true
    _avg?: DespesaAvgAggregateInputType
    _sum?: DespesaSumAggregateInputType
    _min?: DespesaMinAggregateInputType
    _max?: DespesaMaxAggregateInputType
  }

  export type DespesaGroupByOutputType = {
    id: number
    data: Date
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
    _count: DespesaCountAggregateOutputType | null
    _avg: DespesaAvgAggregateOutputType | null
    _sum: DespesaSumAggregateOutputType | null
    _min: DespesaMinAggregateOutputType | null
    _max: DespesaMaxAggregateOutputType | null
  }

  type GetDespesaGroupByPayload<T extends DespesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DespesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DespesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DespesaGroupByOutputType[P]>
            : GetScalarType<T[P], DespesaGroupByOutputType[P]>
        }
      >
    >


  export type DespesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
    categoria?: boolean | CategoriaDespesaDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["despesa"]>

  export type DespesaSelectScalar = {
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
  }


  export type DespesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDespesaDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }


  export type $DespesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Despesa"
    objects: {
      categoria: Prisma.$CategoriaDespesaPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date
      valor: number
      nome: string
      descricao: string
      idCategoria: string
      idUsuario: number
    }, ExtArgs["result"]["despesa"]>
    composites: {}
  }


  type DespesaGetPayload<S extends boolean | null | undefined | DespesaDefaultArgs> = $Result.GetResult<Prisma.$DespesaPayload, S>

  type DespesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DespesaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DespesaCountAggregateInputType | true
    }

  export interface DespesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Despesa'], meta: { name: 'Despesa' } }
    /**
     * Find zero or one Despesa that matches the filter.
     * @param {DespesaFindUniqueArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DespesaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaFindUniqueArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Despesa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DespesaFindUniqueOrThrowArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DespesaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Despesa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindFirstArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DespesaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaFindFirstArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Despesa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindFirstOrThrowArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DespesaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Despesas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Despesas
     * const despesas = await prisma.despesa.findMany()
     * 
     * // Get first 10 Despesas
     * const despesas = await prisma.despesa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const despesaWithIdOnly = await prisma.despesa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DespesaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Despesa.
     * @param {DespesaCreateArgs} args - Arguments to create a Despesa.
     * @example
     * // Create one Despesa
     * const Despesa = await prisma.despesa.create({
     *   data: {
     *     // ... data to create a Despesa
     *   }
     * })
     * 
    **/
    create<T extends DespesaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaCreateArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Despesas.
     * @param {DespesaCreateManyArgs} args - Arguments to create many Despesas.
     * @example
     * // Create many Despesas
     * const despesa = await prisma.despesa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DespesaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Despesas and returns the data saved in the database.
     * @param {DespesaCreateManyAndReturnArgs} args - Arguments to create many Despesas.
     * @example
     * // Create many Despesas
     * const despesa = await prisma.despesa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Despesas and only return the `id`
     * const despesaWithIdOnly = await prisma.despesa.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DespesaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Despesa.
     * @param {DespesaDeleteArgs} args - Arguments to delete one Despesa.
     * @example
     * // Delete one Despesa
     * const Despesa = await prisma.despesa.delete({
     *   where: {
     *     // ... filter to delete one Despesa
     *   }
     * })
     * 
    **/
    delete<T extends DespesaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaDeleteArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Despesa.
     * @param {DespesaUpdateArgs} args - Arguments to update one Despesa.
     * @example
     * // Update one Despesa
     * const despesa = await prisma.despesa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DespesaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaUpdateArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Despesas.
     * @param {DespesaDeleteManyArgs} args - Arguments to filter Despesas to delete.
     * @example
     * // Delete a few Despesas
     * const { count } = await prisma.despesa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DespesaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Despesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Despesas
     * const despesa = await prisma.despesa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DespesaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Despesa.
     * @param {DespesaUpsertArgs} args - Arguments to update or create a Despesa.
     * @example
     * // Update or create a Despesa
     * const despesa = await prisma.despesa.upsert({
     *   create: {
     *     // ... data to create a Despesa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Despesa we want to update
     *   }
     * })
    **/
    upsert<T extends DespesaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaUpsertArgs<ExtArgs>>
    ): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Despesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaCountArgs} args - Arguments to filter Despesas to count.
     * @example
     * // Count the number of Despesas
     * const count = await prisma.despesa.count({
     *   where: {
     *     // ... the filter for the Despesas we want to count
     *   }
     * })
    **/
    count<T extends DespesaCountArgs>(
      args?: Subset<T, DespesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DespesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Despesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DespesaAggregateArgs>(args: Subset<T, DespesaAggregateArgs>): Prisma.PrismaPromise<GetDespesaAggregateType<T>>

    /**
     * Group by Despesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DespesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DespesaGroupByArgs['orderBy'] }
        : { orderBy?: DespesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DespesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDespesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Despesa model
   */
  readonly fields: DespesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Despesa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DespesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    categoria<T extends CategoriaDespesaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDespesaDefaultArgs<ExtArgs>>): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Despesa model
   */ 
  interface DespesaFieldRefs {
    readonly id: FieldRef<"Despesa", 'Int'>
    readonly data: FieldRef<"Despesa", 'DateTime'>
    readonly valor: FieldRef<"Despesa", 'Float'>
    readonly nome: FieldRef<"Despesa", 'String'>
    readonly descricao: FieldRef<"Despesa", 'String'>
    readonly idCategoria: FieldRef<"Despesa", 'String'>
    readonly idUsuario: FieldRef<"Despesa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Despesa findUnique
   */
  export type DespesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa findUniqueOrThrow
   */
  export type DespesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa findFirst
   */
  export type DespesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Despesas.
     */
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa findFirstOrThrow
   */
  export type DespesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Despesas.
     */
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa findMany
   */
  export type DespesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesas to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa create
   */
  export type DespesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The data needed to create a Despesa.
     */
    data: XOR<DespesaCreateInput, DespesaUncheckedCreateInput>
  }

  /**
   * Despesa createMany
   */
  export type DespesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Despesas.
     */
    data: DespesaCreateManyInput | DespesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Despesa createManyAndReturn
   */
  export type DespesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The data used to create many Despesas.
     */
    data: DespesaCreateManyInput | DespesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Despesa update
   */
  export type DespesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The data needed to update a Despesa.
     */
    data: XOR<DespesaUpdateInput, DespesaUncheckedUpdateInput>
    /**
     * Choose, which Despesa to update.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa updateMany
   */
  export type DespesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Despesas.
     */
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyInput>
    /**
     * Filter which Despesas to update
     */
    where?: DespesaWhereInput
  }

  /**
   * Despesa upsert
   */
  export type DespesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The filter to search for the Despesa to update in case it exists.
     */
    where: DespesaWhereUniqueInput
    /**
     * In case the Despesa found by the `where` argument doesn't exist, create a new Despesa with this data.
     */
    create: XOR<DespesaCreateInput, DespesaUncheckedCreateInput>
    /**
     * In case the Despesa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DespesaUpdateInput, DespesaUncheckedUpdateInput>
  }

  /**
   * Despesa delete
   */
  export type DespesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter which Despesa to delete.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa deleteMany
   */
  export type DespesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Despesas to delete
     */
    where?: DespesaWhereInput
  }

  /**
   * Despesa without action
   */
  export type DespesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
  }


  /**
   * Model DespesaContinua
   */

  export type AggregateDespesaContinua = {
    _count: DespesaContinuaCountAggregateOutputType | null
    _avg: DespesaContinuaAvgAggregateOutputType | null
    _sum: DespesaContinuaSumAggregateOutputType | null
    _min: DespesaContinuaMinAggregateOutputType | null
    _max: DespesaContinuaMaxAggregateOutputType | null
  }

  export type DespesaContinuaAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    mesComeco: number | null
    diaPagamento: number | null
    idUsuario: number | null
  }

  export type DespesaContinuaSumAggregateOutputType = {
    id: number | null
    valor: number | null
    mesComeco: number | null
    diaPagamento: number | null
    idUsuario: number | null
  }

  export type DespesaContinuaMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    mesComeco: number | null
    diaPagamento: number | null
    anualmente: boolean | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type DespesaContinuaMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    mesComeco: number | null
    diaPagamento: number | null
    anualmente: boolean | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type DespesaContinuaCountAggregateOutputType = {
    id: number
    data: number
    valor: number
    nome: number
    descricao: number
    mesComeco: number
    diaPagamento: number
    anualmente: number
    idCategoria: number
    idUsuario: number
    _all: number
  }


  export type DespesaContinuaAvgAggregateInputType = {
    id?: true
    valor?: true
    mesComeco?: true
    diaPagamento?: true
    idUsuario?: true
  }

  export type DespesaContinuaSumAggregateInputType = {
    id?: true
    valor?: true
    mesComeco?: true
    diaPagamento?: true
    idUsuario?: true
  }

  export type DespesaContinuaMinAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type DespesaContinuaMaxAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type DespesaContinuaCountAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
    _all?: true
  }

  export type DespesaContinuaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DespesaContinua to aggregate.
     */
    where?: DespesaContinuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DespesaContinuas to fetch.
     */
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DespesaContinuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DespesaContinuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DespesaContinuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DespesaContinuas
    **/
    _count?: true | DespesaContinuaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DespesaContinuaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DespesaContinuaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DespesaContinuaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DespesaContinuaMaxAggregateInputType
  }

  export type GetDespesaContinuaAggregateType<T extends DespesaContinuaAggregateArgs> = {
        [P in keyof T & keyof AggregateDespesaContinua]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDespesaContinua[P]>
      : GetScalarType<T[P], AggregateDespesaContinua[P]>
  }




  export type DespesaContinuaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaContinuaWhereInput
    orderBy?: DespesaContinuaOrderByWithAggregationInput | DespesaContinuaOrderByWithAggregationInput[]
    by: DespesaContinuaScalarFieldEnum[] | DespesaContinuaScalarFieldEnum
    having?: DespesaContinuaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DespesaContinuaCountAggregateInputType | true
    _avg?: DespesaContinuaAvgAggregateInputType
    _sum?: DespesaContinuaSumAggregateInputType
    _min?: DespesaContinuaMinAggregateInputType
    _max?: DespesaContinuaMaxAggregateInputType
  }

  export type DespesaContinuaGroupByOutputType = {
    id: number
    data: Date
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
    _count: DespesaContinuaCountAggregateOutputType | null
    _avg: DespesaContinuaAvgAggregateOutputType | null
    _sum: DespesaContinuaSumAggregateOutputType | null
    _min: DespesaContinuaMinAggregateOutputType | null
    _max: DespesaContinuaMaxAggregateOutputType | null
  }

  type GetDespesaContinuaGroupByPayload<T extends DespesaContinuaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DespesaContinuaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DespesaContinuaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DespesaContinuaGroupByOutputType[P]>
            : GetScalarType<T[P], DespesaContinuaGroupByOutputType[P]>
        }
      >
    >


  export type DespesaContinuaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    mesComeco?: boolean
    diaPagamento?: boolean
    anualmente?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
    categoria?: boolean | CategoriaDespesaDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["despesaContinua"]>

  export type DespesaContinuaSelectScalar = {
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    mesComeco?: boolean
    diaPagamento?: boolean
    anualmente?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
  }


  export type DespesaContinuaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDespesaDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }


  export type $DespesaContinuaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DespesaContinua"
    objects: {
      categoria: Prisma.$CategoriaDespesaPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date
      valor: number
      nome: string
      descricao: string
      mesComeco: number
      diaPagamento: number
      anualmente: boolean
      idCategoria: string
      idUsuario: number
    }, ExtArgs["result"]["despesaContinua"]>
    composites: {}
  }


  type DespesaContinuaGetPayload<S extends boolean | null | undefined | DespesaContinuaDefaultArgs> = $Result.GetResult<Prisma.$DespesaContinuaPayload, S>

  type DespesaContinuaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DespesaContinuaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DespesaContinuaCountAggregateInputType | true
    }

  export interface DespesaContinuaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DespesaContinua'], meta: { name: 'DespesaContinua' } }
    /**
     * Find zero or one DespesaContinua that matches the filter.
     * @param {DespesaContinuaFindUniqueArgs} args - Arguments to find a DespesaContinua
     * @example
     * // Get one DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DespesaContinuaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaFindUniqueArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DespesaContinua that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DespesaContinuaFindUniqueOrThrowArgs} args - Arguments to find a DespesaContinua
     * @example
     * // Get one DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DespesaContinuaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DespesaContinua that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaFindFirstArgs} args - Arguments to find a DespesaContinua
     * @example
     * // Get one DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DespesaContinuaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaFindFirstArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DespesaContinua that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaFindFirstOrThrowArgs} args - Arguments to find a DespesaContinua
     * @example
     * // Get one DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DespesaContinuaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DespesaContinuas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DespesaContinuas
     * const despesaContinuas = await prisma.despesaContinua.findMany()
     * 
     * // Get first 10 DespesaContinuas
     * const despesaContinuas = await prisma.despesaContinua.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const despesaContinuaWithIdOnly = await prisma.despesaContinua.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DespesaContinuaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DespesaContinua.
     * @param {DespesaContinuaCreateArgs} args - Arguments to create a DespesaContinua.
     * @example
     * // Create one DespesaContinua
     * const DespesaContinua = await prisma.despesaContinua.create({
     *   data: {
     *     // ... data to create a DespesaContinua
     *   }
     * })
     * 
    **/
    create<T extends DespesaContinuaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaCreateArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DespesaContinuas.
     * @param {DespesaContinuaCreateManyArgs} args - Arguments to create many DespesaContinuas.
     * @example
     * // Create many DespesaContinuas
     * const despesaContinua = await prisma.despesaContinua.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DespesaContinuaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DespesaContinuas and returns the data saved in the database.
     * @param {DespesaContinuaCreateManyAndReturnArgs} args - Arguments to create many DespesaContinuas.
     * @example
     * // Create many DespesaContinuas
     * const despesaContinua = await prisma.despesaContinua.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DespesaContinuas and only return the `id`
     * const despesaContinuaWithIdOnly = await prisma.despesaContinua.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends DespesaContinuaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a DespesaContinua.
     * @param {DespesaContinuaDeleteArgs} args - Arguments to delete one DespesaContinua.
     * @example
     * // Delete one DespesaContinua
     * const DespesaContinua = await prisma.despesaContinua.delete({
     *   where: {
     *     // ... filter to delete one DespesaContinua
     *   }
     * })
     * 
    **/
    delete<T extends DespesaContinuaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaDeleteArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DespesaContinua.
     * @param {DespesaContinuaUpdateArgs} args - Arguments to update one DespesaContinua.
     * @example
     * // Update one DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DespesaContinuaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaUpdateArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DespesaContinuas.
     * @param {DespesaContinuaDeleteManyArgs} args - Arguments to filter DespesaContinuas to delete.
     * @example
     * // Delete a few DespesaContinuas
     * const { count } = await prisma.despesaContinua.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DespesaContinuaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DespesaContinuaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DespesaContinuas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DespesaContinuas
     * const despesaContinua = await prisma.despesaContinua.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DespesaContinuaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DespesaContinua.
     * @param {DespesaContinuaUpsertArgs} args - Arguments to update or create a DespesaContinua.
     * @example
     * // Update or create a DespesaContinua
     * const despesaContinua = await prisma.despesaContinua.upsert({
     *   create: {
     *     // ... data to create a DespesaContinua
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DespesaContinua we want to update
     *   }
     * })
    **/
    upsert<T extends DespesaContinuaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DespesaContinuaUpsertArgs<ExtArgs>>
    ): Prisma__DespesaContinuaClient<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DespesaContinuas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaCountArgs} args - Arguments to filter DespesaContinuas to count.
     * @example
     * // Count the number of DespesaContinuas
     * const count = await prisma.despesaContinua.count({
     *   where: {
     *     // ... the filter for the DespesaContinuas we want to count
     *   }
     * })
    **/
    count<T extends DespesaContinuaCountArgs>(
      args?: Subset<T, DespesaContinuaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DespesaContinuaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DespesaContinua.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DespesaContinuaAggregateArgs>(args: Subset<T, DespesaContinuaAggregateArgs>): Prisma.PrismaPromise<GetDespesaContinuaAggregateType<T>>

    /**
     * Group by DespesaContinua.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaContinuaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DespesaContinuaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DespesaContinuaGroupByArgs['orderBy'] }
        : { orderBy?: DespesaContinuaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DespesaContinuaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDespesaContinuaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DespesaContinua model
   */
  readonly fields: DespesaContinuaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DespesaContinua.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DespesaContinuaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    categoria<T extends CategoriaDespesaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDespesaDefaultArgs<ExtArgs>>): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the DespesaContinua model
   */ 
  interface DespesaContinuaFieldRefs {
    readonly id: FieldRef<"DespesaContinua", 'Int'>
    readonly data: FieldRef<"DespesaContinua", 'DateTime'>
    readonly valor: FieldRef<"DespesaContinua", 'Float'>
    readonly nome: FieldRef<"DespesaContinua", 'String'>
    readonly descricao: FieldRef<"DespesaContinua", 'String'>
    readonly mesComeco: FieldRef<"DespesaContinua", 'Int'>
    readonly diaPagamento: FieldRef<"DespesaContinua", 'Int'>
    readonly anualmente: FieldRef<"DespesaContinua", 'Boolean'>
    readonly idCategoria: FieldRef<"DespesaContinua", 'String'>
    readonly idUsuario: FieldRef<"DespesaContinua", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DespesaContinua findUnique
   */
  export type DespesaContinuaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter, which DespesaContinua to fetch.
     */
    where: DespesaContinuaWhereUniqueInput
  }

  /**
   * DespesaContinua findUniqueOrThrow
   */
  export type DespesaContinuaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter, which DespesaContinua to fetch.
     */
    where: DespesaContinuaWhereUniqueInput
  }

  /**
   * DespesaContinua findFirst
   */
  export type DespesaContinuaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter, which DespesaContinua to fetch.
     */
    where?: DespesaContinuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DespesaContinuas to fetch.
     */
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DespesaContinuas.
     */
    cursor?: DespesaContinuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DespesaContinuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DespesaContinuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DespesaContinuas.
     */
    distinct?: DespesaContinuaScalarFieldEnum | DespesaContinuaScalarFieldEnum[]
  }

  /**
   * DespesaContinua findFirstOrThrow
   */
  export type DespesaContinuaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter, which DespesaContinua to fetch.
     */
    where?: DespesaContinuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DespesaContinuas to fetch.
     */
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DespesaContinuas.
     */
    cursor?: DespesaContinuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DespesaContinuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DespesaContinuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DespesaContinuas.
     */
    distinct?: DespesaContinuaScalarFieldEnum | DespesaContinuaScalarFieldEnum[]
  }

  /**
   * DespesaContinua findMany
   */
  export type DespesaContinuaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter, which DespesaContinuas to fetch.
     */
    where?: DespesaContinuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DespesaContinuas to fetch.
     */
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DespesaContinuas.
     */
    cursor?: DespesaContinuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DespesaContinuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DespesaContinuas.
     */
    skip?: number
    distinct?: DespesaContinuaScalarFieldEnum | DespesaContinuaScalarFieldEnum[]
  }

  /**
   * DespesaContinua create
   */
  export type DespesaContinuaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * The data needed to create a DespesaContinua.
     */
    data: XOR<DespesaContinuaCreateInput, DespesaContinuaUncheckedCreateInput>
  }

  /**
   * DespesaContinua createMany
   */
  export type DespesaContinuaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DespesaContinuas.
     */
    data: DespesaContinuaCreateManyInput | DespesaContinuaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DespesaContinua createManyAndReturn
   */
  export type DespesaContinuaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * The data used to create many DespesaContinuas.
     */
    data: DespesaContinuaCreateManyInput | DespesaContinuaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DespesaContinua update
   */
  export type DespesaContinuaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * The data needed to update a DespesaContinua.
     */
    data: XOR<DespesaContinuaUpdateInput, DespesaContinuaUncheckedUpdateInput>
    /**
     * Choose, which DespesaContinua to update.
     */
    where: DespesaContinuaWhereUniqueInput
  }

  /**
   * DespesaContinua updateMany
   */
  export type DespesaContinuaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DespesaContinuas.
     */
    data: XOR<DespesaContinuaUpdateManyMutationInput, DespesaContinuaUncheckedUpdateManyInput>
    /**
     * Filter which DespesaContinuas to update
     */
    where?: DespesaContinuaWhereInput
  }

  /**
   * DespesaContinua upsert
   */
  export type DespesaContinuaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * The filter to search for the DespesaContinua to update in case it exists.
     */
    where: DespesaContinuaWhereUniqueInput
    /**
     * In case the DespesaContinua found by the `where` argument doesn't exist, create a new DespesaContinua with this data.
     */
    create: XOR<DespesaContinuaCreateInput, DespesaContinuaUncheckedCreateInput>
    /**
     * In case the DespesaContinua was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DespesaContinuaUpdateInput, DespesaContinuaUncheckedUpdateInput>
  }

  /**
   * DespesaContinua delete
   */
  export type DespesaContinuaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    /**
     * Filter which DespesaContinua to delete.
     */
    where: DespesaContinuaWhereUniqueInput
  }

  /**
   * DespesaContinua deleteMany
   */
  export type DespesaContinuaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DespesaContinuas to delete
     */
    where?: DespesaContinuaWhereInput
  }

  /**
   * DespesaContinua without action
   */
  export type DespesaContinuaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaDespesa
   */

  export type AggregateCategoriaDespesa = {
    _count: CategoriaDespesaCountAggregateOutputType | null
    _avg: CategoriaDespesaAvgAggregateOutputType | null
    _sum: CategoriaDespesaSumAggregateOutputType | null
    _min: CategoriaDespesaMinAggregateOutputType | null
    _max: CategoriaDespesaMaxAggregateOutputType | null
  }

  export type CategoriaDespesaAvgAggregateOutputType = {
    idUsuario: number | null
  }

  export type CategoriaDespesaSumAggregateOutputType = {
    idUsuario: number | null
  }

  export type CategoriaDespesaMinAggregateOutputType = {
    id: string | null
    cores: string | null
    idUsuario: number | null
  }

  export type CategoriaDespesaMaxAggregateOutputType = {
    id: string | null
    cores: string | null
    idUsuario: number | null
  }

  export type CategoriaDespesaCountAggregateOutputType = {
    id: number
    cores: number
    idUsuario: number
    _all: number
  }


  export type CategoriaDespesaAvgAggregateInputType = {
    idUsuario?: true
  }

  export type CategoriaDespesaSumAggregateInputType = {
    idUsuario?: true
  }

  export type CategoriaDespesaMinAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
  }

  export type CategoriaDespesaMaxAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
  }

  export type CategoriaDespesaCountAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
    _all?: true
  }

  export type CategoriaDespesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaDespesa to aggregate.
     */
    where?: CategoriaDespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDespesas to fetch.
     */
    orderBy?: CategoriaDespesaOrderByWithRelationInput | CategoriaDespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaDespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDespesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDespesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaDespesas
    **/
    _count?: true | CategoriaDespesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaDespesaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaDespesaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaDespesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaDespesaMaxAggregateInputType
  }

  export type GetCategoriaDespesaAggregateType<T extends CategoriaDespesaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaDespesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaDespesa[P]>
      : GetScalarType<T[P], AggregateCategoriaDespesa[P]>
  }




  export type CategoriaDespesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaDespesaWhereInput
    orderBy?: CategoriaDespesaOrderByWithAggregationInput | CategoriaDespesaOrderByWithAggregationInput[]
    by: CategoriaDespesaScalarFieldEnum[] | CategoriaDespesaScalarFieldEnum
    having?: CategoriaDespesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaDespesaCountAggregateInputType | true
    _avg?: CategoriaDespesaAvgAggregateInputType
    _sum?: CategoriaDespesaSumAggregateInputType
    _min?: CategoriaDespesaMinAggregateInputType
    _max?: CategoriaDespesaMaxAggregateInputType
  }

  export type CategoriaDespesaGroupByOutputType = {
    id: string
    cores: string
    idUsuario: number
    _count: CategoriaDespesaCountAggregateOutputType | null
    _avg: CategoriaDespesaAvgAggregateOutputType | null
    _sum: CategoriaDespesaSumAggregateOutputType | null
    _min: CategoriaDespesaMinAggregateOutputType | null
    _max: CategoriaDespesaMaxAggregateOutputType | null
  }

  type GetCategoriaDespesaGroupByPayload<T extends CategoriaDespesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaDespesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaDespesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaDespesaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaDespesaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaDespesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cores?: boolean
    idUsuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    despesasContinuas?: boolean | CategoriaDespesa$despesasContinuasArgs<ExtArgs>
    despesas?: boolean | CategoriaDespesa$despesasArgs<ExtArgs>
    _count?: boolean | CategoriaDespesaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaDespesa"]>

  export type CategoriaDespesaSelectScalar = {
    id?: boolean
    cores?: boolean
    idUsuario?: boolean
  }


  export type CategoriaDespesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    despesasContinuas?: boolean | CategoriaDespesa$despesasContinuasArgs<ExtArgs>
    despesas?: boolean | CategoriaDespesa$despesasArgs<ExtArgs>
    _count?: boolean | CategoriaDespesaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CategoriaDespesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaDespesa"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      despesasContinuas: Prisma.$DespesaContinuaPayload<ExtArgs>[]
      despesas: Prisma.$DespesaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cores: string
      idUsuario: number
    }, ExtArgs["result"]["categoriaDespesa"]>
    composites: {}
  }


  type CategoriaDespesaGetPayload<S extends boolean | null | undefined | CategoriaDespesaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaDespesaPayload, S>

  type CategoriaDespesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriaDespesaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriaDespesaCountAggregateInputType | true
    }

  export interface CategoriaDespesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaDespesa'], meta: { name: 'CategoriaDespesa' } }
    /**
     * Find zero or one CategoriaDespesa that matches the filter.
     * @param {CategoriaDespesaFindUniqueArgs} args - Arguments to find a CategoriaDespesa
     * @example
     * // Get one CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriaDespesaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CategoriaDespesa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoriaDespesaFindUniqueOrThrowArgs} args - Arguments to find a CategoriaDespesa
     * @example
     * // Get one CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriaDespesaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CategoriaDespesa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaFindFirstArgs} args - Arguments to find a CategoriaDespesa
     * @example
     * // Get one CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriaDespesaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CategoriaDespesa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaFindFirstOrThrowArgs} args - Arguments to find a CategoriaDespesa
     * @example
     * // Get one CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriaDespesaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CategoriaDespesas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaDespesas
     * const categoriaDespesas = await prisma.categoriaDespesa.findMany()
     * 
     * // Get first 10 CategoriaDespesas
     * const categoriaDespesas = await prisma.categoriaDespesa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaDespesaWithIdOnly = await prisma.categoriaDespesa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriaDespesaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CategoriaDespesa.
     * @param {CategoriaDespesaCreateArgs} args - Arguments to create a CategoriaDespesa.
     * @example
     * // Create one CategoriaDespesa
     * const CategoriaDespesa = await prisma.categoriaDespesa.create({
     *   data: {
     *     // ... data to create a CategoriaDespesa
     *   }
     * })
     * 
    **/
    create<T extends CategoriaDespesaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaCreateArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CategoriaDespesas.
     * @param {CategoriaDespesaCreateManyArgs} args - Arguments to create many CategoriaDespesas.
     * @example
     * // Create many CategoriaDespesas
     * const categoriaDespesa = await prisma.categoriaDespesa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CategoriaDespesaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaDespesas and returns the data saved in the database.
     * @param {CategoriaDespesaCreateManyAndReturnArgs} args - Arguments to create many CategoriaDespesas.
     * @example
     * // Create many CategoriaDespesas
     * const categoriaDespesa = await prisma.categoriaDespesa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaDespesas and only return the `id`
     * const categoriaDespesaWithIdOnly = await prisma.categoriaDespesa.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CategoriaDespesaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a CategoriaDespesa.
     * @param {CategoriaDespesaDeleteArgs} args - Arguments to delete one CategoriaDespesa.
     * @example
     * // Delete one CategoriaDespesa
     * const CategoriaDespesa = await prisma.categoriaDespesa.delete({
     *   where: {
     *     // ... filter to delete one CategoriaDespesa
     *   }
     * })
     * 
    **/
    delete<T extends CategoriaDespesaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaDeleteArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CategoriaDespesa.
     * @param {CategoriaDespesaUpdateArgs} args - Arguments to update one CategoriaDespesa.
     * @example
     * // Update one CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriaDespesaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaUpdateArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CategoriaDespesas.
     * @param {CategoriaDespesaDeleteManyArgs} args - Arguments to filter CategoriaDespesas to delete.
     * @example
     * // Delete a few CategoriaDespesas
     * const { count } = await prisma.categoriaDespesa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriaDespesaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaDespesaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaDespesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaDespesas
     * const categoriaDespesa = await prisma.categoriaDespesa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriaDespesaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CategoriaDespesa.
     * @param {CategoriaDespesaUpsertArgs} args - Arguments to update or create a CategoriaDespesa.
     * @example
     * // Update or create a CategoriaDespesa
     * const categoriaDespesa = await prisma.categoriaDespesa.upsert({
     *   create: {
     *     // ... data to create a CategoriaDespesa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaDespesa we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriaDespesaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaDespesaUpsertArgs<ExtArgs>>
    ): Prisma__CategoriaDespesaClient<$Result.GetResult<Prisma.$CategoriaDespesaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CategoriaDespesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaCountArgs} args - Arguments to filter CategoriaDespesas to count.
     * @example
     * // Count the number of CategoriaDespesas
     * const count = await prisma.categoriaDespesa.count({
     *   where: {
     *     // ... the filter for the CategoriaDespesas we want to count
     *   }
     * })
    **/
    count<T extends CategoriaDespesaCountArgs>(
      args?: Subset<T, CategoriaDespesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaDespesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaDespesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaDespesaAggregateArgs>(args: Subset<T, CategoriaDespesaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaDespesaAggregateType<T>>

    /**
     * Group by CategoriaDespesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDespesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaDespesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaDespesaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaDespesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaDespesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaDespesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaDespesa model
   */
  readonly fields: CategoriaDespesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaDespesa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaDespesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    despesasContinuas<T extends CategoriaDespesa$despesasContinuasArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDespesa$despesasContinuasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaContinuaPayload<ExtArgs>, T, 'findMany'> | Null>;

    despesas<T extends CategoriaDespesa$despesasArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDespesa$despesasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CategoriaDespesa model
   */ 
  interface CategoriaDespesaFieldRefs {
    readonly id: FieldRef<"CategoriaDespesa", 'String'>
    readonly cores: FieldRef<"CategoriaDespesa", 'String'>
    readonly idUsuario: FieldRef<"CategoriaDespesa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaDespesa findUnique
   */
  export type CategoriaDespesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDespesa to fetch.
     */
    where: CategoriaDespesaWhereUniqueInput
  }

  /**
   * CategoriaDespesa findUniqueOrThrow
   */
  export type CategoriaDespesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDespesa to fetch.
     */
    where: CategoriaDespesaWhereUniqueInput
  }

  /**
   * CategoriaDespesa findFirst
   */
  export type CategoriaDespesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDespesa to fetch.
     */
    where?: CategoriaDespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDespesas to fetch.
     */
    orderBy?: CategoriaDespesaOrderByWithRelationInput | CategoriaDespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaDespesas.
     */
    cursor?: CategoriaDespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDespesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDespesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaDespesas.
     */
    distinct?: CategoriaDespesaScalarFieldEnum | CategoriaDespesaScalarFieldEnum[]
  }

  /**
   * CategoriaDespesa findFirstOrThrow
   */
  export type CategoriaDespesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDespesa to fetch.
     */
    where?: CategoriaDespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDespesas to fetch.
     */
    orderBy?: CategoriaDespesaOrderByWithRelationInput | CategoriaDespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaDespesas.
     */
    cursor?: CategoriaDespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDespesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDespesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaDespesas.
     */
    distinct?: CategoriaDespesaScalarFieldEnum | CategoriaDespesaScalarFieldEnum[]
  }

  /**
   * CategoriaDespesa findMany
   */
  export type CategoriaDespesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDespesas to fetch.
     */
    where?: CategoriaDespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDespesas to fetch.
     */
    orderBy?: CategoriaDespesaOrderByWithRelationInput | CategoriaDespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaDespesas.
     */
    cursor?: CategoriaDespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDespesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDespesas.
     */
    skip?: number
    distinct?: CategoriaDespesaScalarFieldEnum | CategoriaDespesaScalarFieldEnum[]
  }

  /**
   * CategoriaDespesa create
   */
  export type CategoriaDespesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaDespesa.
     */
    data: XOR<CategoriaDespesaCreateInput, CategoriaDespesaUncheckedCreateInput>
  }

  /**
   * CategoriaDespesa createMany
   */
  export type CategoriaDespesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaDespesas.
     */
    data: CategoriaDespesaCreateManyInput | CategoriaDespesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaDespesa createManyAndReturn
   */
  export type CategoriaDespesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * The data used to create many CategoriaDespesas.
     */
    data: CategoriaDespesaCreateManyInput | CategoriaDespesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaDespesa update
   */
  export type CategoriaDespesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaDespesa.
     */
    data: XOR<CategoriaDespesaUpdateInput, CategoriaDespesaUncheckedUpdateInput>
    /**
     * Choose, which CategoriaDespesa to update.
     */
    where: CategoriaDespesaWhereUniqueInput
  }

  /**
   * CategoriaDespesa updateMany
   */
  export type CategoriaDespesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaDespesas.
     */
    data: XOR<CategoriaDespesaUpdateManyMutationInput, CategoriaDespesaUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaDespesas to update
     */
    where?: CategoriaDespesaWhereInput
  }

  /**
   * CategoriaDespesa upsert
   */
  export type CategoriaDespesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaDespesa to update in case it exists.
     */
    where: CategoriaDespesaWhereUniqueInput
    /**
     * In case the CategoriaDespesa found by the `where` argument doesn't exist, create a new CategoriaDespesa with this data.
     */
    create: XOR<CategoriaDespesaCreateInput, CategoriaDespesaUncheckedCreateInput>
    /**
     * In case the CategoriaDespesa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaDespesaUpdateInput, CategoriaDespesaUncheckedUpdateInput>
  }

  /**
   * CategoriaDespesa delete
   */
  export type CategoriaDespesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
    /**
     * Filter which CategoriaDespesa to delete.
     */
    where: CategoriaDespesaWhereUniqueInput
  }

  /**
   * CategoriaDespesa deleteMany
   */
  export type CategoriaDespesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaDespesas to delete
     */
    where?: CategoriaDespesaWhereInput
  }

  /**
   * CategoriaDespesa.despesasContinuas
   */
  export type CategoriaDespesa$despesasContinuasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DespesaContinua
     */
    select?: DespesaContinuaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaContinuaInclude<ExtArgs> | null
    where?: DespesaContinuaWhereInput
    orderBy?: DespesaContinuaOrderByWithRelationInput | DespesaContinuaOrderByWithRelationInput[]
    cursor?: DespesaContinuaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DespesaContinuaScalarFieldEnum | DespesaContinuaScalarFieldEnum[]
  }

  /**
   * CategoriaDespesa.despesas
   */
  export type CategoriaDespesa$despesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    where?: DespesaWhereInput
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    cursor?: DespesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * CategoriaDespesa without action
   */
  export type CategoriaDespesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDespesa
     */
    select?: CategoriaDespesaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDespesaInclude<ExtArgs> | null
  }


  /**
   * Model Ativo
   */

  export type AggregateAtivo = {
    _count: AtivoCountAggregateOutputType | null
    _avg: AtivoAvgAggregateOutputType | null
    _sum: AtivoSumAggregateOutputType | null
    _min: AtivoMinAggregateOutputType | null
    _max: AtivoMaxAggregateOutputType | null
  }

  export type AtivoAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    idUsuario: number | null
  }

  export type AtivoSumAggregateOutputType = {
    id: number | null
    valor: number | null
    idUsuario: number | null
  }

  export type AtivoMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type AtivoMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type AtivoCountAggregateOutputType = {
    id: number
    data: number
    valor: number
    nome: number
    descricao: number
    idCategoria: number
    idUsuario: number
    _all: number
  }


  export type AtivoAvgAggregateInputType = {
    id?: true
    valor?: true
    idUsuario?: true
  }

  export type AtivoSumAggregateInputType = {
    id?: true
    valor?: true
    idUsuario?: true
  }

  export type AtivoMinAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type AtivoMaxAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type AtivoCountAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    idCategoria?: true
    idUsuario?: true
    _all?: true
  }

  export type AtivoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ativo to aggregate.
     */
    where?: AtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ativos to fetch.
     */
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ativos
    **/
    _count?: true | AtivoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AtivoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AtivoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtivoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtivoMaxAggregateInputType
  }

  export type GetAtivoAggregateType<T extends AtivoAggregateArgs> = {
        [P in keyof T & keyof AggregateAtivo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtivo[P]>
      : GetScalarType<T[P], AggregateAtivo[P]>
  }




  export type AtivoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoWhereInput
    orderBy?: AtivoOrderByWithAggregationInput | AtivoOrderByWithAggregationInput[]
    by: AtivoScalarFieldEnum[] | AtivoScalarFieldEnum
    having?: AtivoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtivoCountAggregateInputType | true
    _avg?: AtivoAvgAggregateInputType
    _sum?: AtivoSumAggregateInputType
    _min?: AtivoMinAggregateInputType
    _max?: AtivoMaxAggregateInputType
  }

  export type AtivoGroupByOutputType = {
    id: number
    data: Date
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
    _count: AtivoCountAggregateOutputType | null
    _avg: AtivoAvgAggregateOutputType | null
    _sum: AtivoSumAggregateOutputType | null
    _min: AtivoMinAggregateOutputType | null
    _max: AtivoMaxAggregateOutputType | null
  }

  type GetAtivoGroupByPayload<T extends AtivoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtivoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtivoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtivoGroupByOutputType[P]>
            : GetScalarType<T[P], AtivoGroupByOutputType[P]>
        }
      >
    >


  export type AtivoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
    categoria?: boolean | CategoriaAtivoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ativo"]>

  export type AtivoSelectScalar = {
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
  }


  export type AtivoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaAtivoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }


  export type $AtivoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ativo"
    objects: {
      categoria: Prisma.$CategoriaAtivoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date
      valor: number
      nome: string
      descricao: string
      idCategoria: string
      idUsuario: number
    }, ExtArgs["result"]["ativo"]>
    composites: {}
  }


  type AtivoGetPayload<S extends boolean | null | undefined | AtivoDefaultArgs> = $Result.GetResult<Prisma.$AtivoPayload, S>

  type AtivoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AtivoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AtivoCountAggregateInputType | true
    }

  export interface AtivoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ativo'], meta: { name: 'Ativo' } }
    /**
     * Find zero or one Ativo that matches the filter.
     * @param {AtivoFindUniqueArgs} args - Arguments to find a Ativo
     * @example
     * // Get one Ativo
     * const ativo = await prisma.ativo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AtivoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoFindUniqueArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Ativo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AtivoFindUniqueOrThrowArgs} args - Arguments to find a Ativo
     * @example
     * // Get one Ativo
     * const ativo = await prisma.ativo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AtivoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Ativo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoFindFirstArgs} args - Arguments to find a Ativo
     * @example
     * // Get one Ativo
     * const ativo = await prisma.ativo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AtivoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoFindFirstArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Ativo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoFindFirstOrThrowArgs} args - Arguments to find a Ativo
     * @example
     * // Get one Ativo
     * const ativo = await prisma.ativo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AtivoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Ativos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ativos
     * const ativos = await prisma.ativo.findMany()
     * 
     * // Get first 10 Ativos
     * const ativos = await prisma.ativo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ativoWithIdOnly = await prisma.ativo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AtivoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Ativo.
     * @param {AtivoCreateArgs} args - Arguments to create a Ativo.
     * @example
     * // Create one Ativo
     * const Ativo = await prisma.ativo.create({
     *   data: {
     *     // ... data to create a Ativo
     *   }
     * })
     * 
    **/
    create<T extends AtivoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoCreateArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Ativos.
     * @param {AtivoCreateManyArgs} args - Arguments to create many Ativos.
     * @example
     * // Create many Ativos
     * const ativo = await prisma.ativo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AtivoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ativos and returns the data saved in the database.
     * @param {AtivoCreateManyAndReturnArgs} args - Arguments to create many Ativos.
     * @example
     * // Create many Ativos
     * const ativo = await prisma.ativo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ativos and only return the `id`
     * const ativoWithIdOnly = await prisma.ativo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends AtivoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Ativo.
     * @param {AtivoDeleteArgs} args - Arguments to delete one Ativo.
     * @example
     * // Delete one Ativo
     * const Ativo = await prisma.ativo.delete({
     *   where: {
     *     // ... filter to delete one Ativo
     *   }
     * })
     * 
    **/
    delete<T extends AtivoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoDeleteArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Ativo.
     * @param {AtivoUpdateArgs} args - Arguments to update one Ativo.
     * @example
     * // Update one Ativo
     * const ativo = await prisma.ativo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AtivoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoUpdateArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Ativos.
     * @param {AtivoDeleteManyArgs} args - Arguments to filter Ativos to delete.
     * @example
     * // Delete a few Ativos
     * const { count } = await prisma.ativo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AtivoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ativos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ativos
     * const ativo = await prisma.ativo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AtivoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ativo.
     * @param {AtivoUpsertArgs} args - Arguments to update or create a Ativo.
     * @example
     * // Update or create a Ativo
     * const ativo = await prisma.ativo.upsert({
     *   create: {
     *     // ... data to create a Ativo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ativo we want to update
     *   }
     * })
    **/
    upsert<T extends AtivoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoUpsertArgs<ExtArgs>>
    ): Prisma__AtivoClient<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Ativos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoCountArgs} args - Arguments to filter Ativos to count.
     * @example
     * // Count the number of Ativos
     * const count = await prisma.ativo.count({
     *   where: {
     *     // ... the filter for the Ativos we want to count
     *   }
     * })
    **/
    count<T extends AtivoCountArgs>(
      args?: Subset<T, AtivoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtivoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ativo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtivoAggregateArgs>(args: Subset<T, AtivoAggregateArgs>): Prisma.PrismaPromise<GetAtivoAggregateType<T>>

    /**
     * Group by Ativo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AtivoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AtivoGroupByArgs['orderBy'] }
        : { orderBy?: AtivoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AtivoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtivoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ativo model
   */
  readonly fields: AtivoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ativo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AtivoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    categoria<T extends CategoriaAtivoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaAtivoDefaultArgs<ExtArgs>>): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Ativo model
   */ 
  interface AtivoFieldRefs {
    readonly id: FieldRef<"Ativo", 'Int'>
    readonly data: FieldRef<"Ativo", 'DateTime'>
    readonly valor: FieldRef<"Ativo", 'Float'>
    readonly nome: FieldRef<"Ativo", 'String'>
    readonly descricao: FieldRef<"Ativo", 'String'>
    readonly idCategoria: FieldRef<"Ativo", 'String'>
    readonly idUsuario: FieldRef<"Ativo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Ativo findUnique
   */
  export type AtivoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter, which Ativo to fetch.
     */
    where: AtivoWhereUniqueInput
  }

  /**
   * Ativo findUniqueOrThrow
   */
  export type AtivoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter, which Ativo to fetch.
     */
    where: AtivoWhereUniqueInput
  }

  /**
   * Ativo findFirst
   */
  export type AtivoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter, which Ativo to fetch.
     */
    where?: AtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ativos to fetch.
     */
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ativos.
     */
    cursor?: AtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ativos.
     */
    distinct?: AtivoScalarFieldEnum | AtivoScalarFieldEnum[]
  }

  /**
   * Ativo findFirstOrThrow
   */
  export type AtivoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter, which Ativo to fetch.
     */
    where?: AtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ativos to fetch.
     */
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ativos.
     */
    cursor?: AtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ativos.
     */
    distinct?: AtivoScalarFieldEnum | AtivoScalarFieldEnum[]
  }

  /**
   * Ativo findMany
   */
  export type AtivoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter, which Ativos to fetch.
     */
    where?: AtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ativos to fetch.
     */
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ativos.
     */
    cursor?: AtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ativos.
     */
    skip?: number
    distinct?: AtivoScalarFieldEnum | AtivoScalarFieldEnum[]
  }

  /**
   * Ativo create
   */
  export type AtivoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * The data needed to create a Ativo.
     */
    data: XOR<AtivoCreateInput, AtivoUncheckedCreateInput>
  }

  /**
   * Ativo createMany
   */
  export type AtivoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ativos.
     */
    data: AtivoCreateManyInput | AtivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ativo createManyAndReturn
   */
  export type AtivoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * The data used to create many Ativos.
     */
    data: AtivoCreateManyInput | AtivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ativo update
   */
  export type AtivoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * The data needed to update a Ativo.
     */
    data: XOR<AtivoUpdateInput, AtivoUncheckedUpdateInput>
    /**
     * Choose, which Ativo to update.
     */
    where: AtivoWhereUniqueInput
  }

  /**
   * Ativo updateMany
   */
  export type AtivoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ativos.
     */
    data: XOR<AtivoUpdateManyMutationInput, AtivoUncheckedUpdateManyInput>
    /**
     * Filter which Ativos to update
     */
    where?: AtivoWhereInput
  }

  /**
   * Ativo upsert
   */
  export type AtivoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * The filter to search for the Ativo to update in case it exists.
     */
    where: AtivoWhereUniqueInput
    /**
     * In case the Ativo found by the `where` argument doesn't exist, create a new Ativo with this data.
     */
    create: XOR<AtivoCreateInput, AtivoUncheckedCreateInput>
    /**
     * In case the Ativo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AtivoUpdateInput, AtivoUncheckedUpdateInput>
  }

  /**
   * Ativo delete
   */
  export type AtivoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    /**
     * Filter which Ativo to delete.
     */
    where: AtivoWhereUniqueInput
  }

  /**
   * Ativo deleteMany
   */
  export type AtivoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ativos to delete
     */
    where?: AtivoWhereInput
  }

  /**
   * Ativo without action
   */
  export type AtivoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
  }


  /**
   * Model AtivoContinuo
   */

  export type AggregateAtivoContinuo = {
    _count: AtivoContinuoCountAggregateOutputType | null
    _avg: AtivoContinuoAvgAggregateOutputType | null
    _sum: AtivoContinuoSumAggregateOutputType | null
    _min: AtivoContinuoMinAggregateOutputType | null
    _max: AtivoContinuoMaxAggregateOutputType | null
  }

  export type AtivoContinuoAvgAggregateOutputType = {
    id: number | null
    valor: number | null
    mesComeco: number | null
    diaPagamento: number | null
    idUsuario: number | null
  }

  export type AtivoContinuoSumAggregateOutputType = {
    id: number | null
    valor: number | null
    mesComeco: number | null
    diaPagamento: number | null
    idUsuario: number | null
  }

  export type AtivoContinuoMinAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    mesComeco: number | null
    diaPagamento: number | null
    anualmente: boolean | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type AtivoContinuoMaxAggregateOutputType = {
    id: number | null
    data: Date | null
    valor: number | null
    nome: string | null
    descricao: string | null
    mesComeco: number | null
    diaPagamento: number | null
    anualmente: boolean | null
    idCategoria: string | null
    idUsuario: number | null
  }

  export type AtivoContinuoCountAggregateOutputType = {
    id: number
    data: number
    valor: number
    nome: number
    descricao: number
    mesComeco: number
    diaPagamento: number
    anualmente: number
    idCategoria: number
    idUsuario: number
    _all: number
  }


  export type AtivoContinuoAvgAggregateInputType = {
    id?: true
    valor?: true
    mesComeco?: true
    diaPagamento?: true
    idUsuario?: true
  }

  export type AtivoContinuoSumAggregateInputType = {
    id?: true
    valor?: true
    mesComeco?: true
    diaPagamento?: true
    idUsuario?: true
  }

  export type AtivoContinuoMinAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type AtivoContinuoMaxAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
  }

  export type AtivoContinuoCountAggregateInputType = {
    id?: true
    data?: true
    valor?: true
    nome?: true
    descricao?: true
    mesComeco?: true
    diaPagamento?: true
    anualmente?: true
    idCategoria?: true
    idUsuario?: true
    _all?: true
  }

  export type AtivoContinuoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtivoContinuo to aggregate.
     */
    where?: AtivoContinuoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtivoContinuos to fetch.
     */
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AtivoContinuoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtivoContinuos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtivoContinuos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AtivoContinuos
    **/
    _count?: true | AtivoContinuoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AtivoContinuoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AtivoContinuoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtivoContinuoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtivoContinuoMaxAggregateInputType
  }

  export type GetAtivoContinuoAggregateType<T extends AtivoContinuoAggregateArgs> = {
        [P in keyof T & keyof AggregateAtivoContinuo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtivoContinuo[P]>
      : GetScalarType<T[P], AggregateAtivoContinuo[P]>
  }




  export type AtivoContinuoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtivoContinuoWhereInput
    orderBy?: AtivoContinuoOrderByWithAggregationInput | AtivoContinuoOrderByWithAggregationInput[]
    by: AtivoContinuoScalarFieldEnum[] | AtivoContinuoScalarFieldEnum
    having?: AtivoContinuoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtivoContinuoCountAggregateInputType | true
    _avg?: AtivoContinuoAvgAggregateInputType
    _sum?: AtivoContinuoSumAggregateInputType
    _min?: AtivoContinuoMinAggregateInputType
    _max?: AtivoContinuoMaxAggregateInputType
  }

  export type AtivoContinuoGroupByOutputType = {
    id: number
    data: Date
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
    _count: AtivoContinuoCountAggregateOutputType | null
    _avg: AtivoContinuoAvgAggregateOutputType | null
    _sum: AtivoContinuoSumAggregateOutputType | null
    _min: AtivoContinuoMinAggregateOutputType | null
    _max: AtivoContinuoMaxAggregateOutputType | null
  }

  type GetAtivoContinuoGroupByPayload<T extends AtivoContinuoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtivoContinuoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtivoContinuoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtivoContinuoGroupByOutputType[P]>
            : GetScalarType<T[P], AtivoContinuoGroupByOutputType[P]>
        }
      >
    >


  export type AtivoContinuoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    mesComeco?: boolean
    diaPagamento?: boolean
    anualmente?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
    categoria?: boolean | CategoriaAtivoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ativoContinuo"]>

  export type AtivoContinuoSelectScalar = {
    id?: boolean
    data?: boolean
    valor?: boolean
    nome?: boolean
    descricao?: boolean
    mesComeco?: boolean
    diaPagamento?: boolean
    anualmente?: boolean
    idCategoria?: boolean
    idUsuario?: boolean
  }


  export type AtivoContinuoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaAtivoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }


  export type $AtivoContinuoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AtivoContinuo"
    objects: {
      categoria: Prisma.$CategoriaAtivoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      data: Date
      valor: number
      nome: string
      descricao: string
      mesComeco: number
      diaPagamento: number
      anualmente: boolean
      idCategoria: string
      idUsuario: number
    }, ExtArgs["result"]["ativoContinuo"]>
    composites: {}
  }


  type AtivoContinuoGetPayload<S extends boolean | null | undefined | AtivoContinuoDefaultArgs> = $Result.GetResult<Prisma.$AtivoContinuoPayload, S>

  type AtivoContinuoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AtivoContinuoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AtivoContinuoCountAggregateInputType | true
    }

  export interface AtivoContinuoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AtivoContinuo'], meta: { name: 'AtivoContinuo' } }
    /**
     * Find zero or one AtivoContinuo that matches the filter.
     * @param {AtivoContinuoFindUniqueArgs} args - Arguments to find a AtivoContinuo
     * @example
     * // Get one AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AtivoContinuoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoFindUniqueArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one AtivoContinuo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AtivoContinuoFindUniqueOrThrowArgs} args - Arguments to find a AtivoContinuo
     * @example
     * // Get one AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AtivoContinuoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first AtivoContinuo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoFindFirstArgs} args - Arguments to find a AtivoContinuo
     * @example
     * // Get one AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AtivoContinuoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoFindFirstArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first AtivoContinuo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoFindFirstOrThrowArgs} args - Arguments to find a AtivoContinuo
     * @example
     * // Get one AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AtivoContinuoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more AtivoContinuos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AtivoContinuos
     * const ativoContinuos = await prisma.ativoContinuo.findMany()
     * 
     * // Get first 10 AtivoContinuos
     * const ativoContinuos = await prisma.ativoContinuo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ativoContinuoWithIdOnly = await prisma.ativoContinuo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AtivoContinuoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a AtivoContinuo.
     * @param {AtivoContinuoCreateArgs} args - Arguments to create a AtivoContinuo.
     * @example
     * // Create one AtivoContinuo
     * const AtivoContinuo = await prisma.ativoContinuo.create({
     *   data: {
     *     // ... data to create a AtivoContinuo
     *   }
     * })
     * 
    **/
    create<T extends AtivoContinuoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoCreateArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many AtivoContinuos.
     * @param {AtivoContinuoCreateManyArgs} args - Arguments to create many AtivoContinuos.
     * @example
     * // Create many AtivoContinuos
     * const ativoContinuo = await prisma.ativoContinuo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AtivoContinuoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AtivoContinuos and returns the data saved in the database.
     * @param {AtivoContinuoCreateManyAndReturnArgs} args - Arguments to create many AtivoContinuos.
     * @example
     * // Create many AtivoContinuos
     * const ativoContinuo = await prisma.ativoContinuo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AtivoContinuos and only return the `id`
     * const ativoContinuoWithIdOnly = await prisma.ativoContinuo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends AtivoContinuoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a AtivoContinuo.
     * @param {AtivoContinuoDeleteArgs} args - Arguments to delete one AtivoContinuo.
     * @example
     * // Delete one AtivoContinuo
     * const AtivoContinuo = await prisma.ativoContinuo.delete({
     *   where: {
     *     // ... filter to delete one AtivoContinuo
     *   }
     * })
     * 
    **/
    delete<T extends AtivoContinuoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoDeleteArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one AtivoContinuo.
     * @param {AtivoContinuoUpdateArgs} args - Arguments to update one AtivoContinuo.
     * @example
     * // Update one AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AtivoContinuoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoUpdateArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more AtivoContinuos.
     * @param {AtivoContinuoDeleteManyArgs} args - Arguments to filter AtivoContinuos to delete.
     * @example
     * // Delete a few AtivoContinuos
     * const { count } = await prisma.ativoContinuo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AtivoContinuoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AtivoContinuoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AtivoContinuos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AtivoContinuos
     * const ativoContinuo = await prisma.ativoContinuo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AtivoContinuoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AtivoContinuo.
     * @param {AtivoContinuoUpsertArgs} args - Arguments to update or create a AtivoContinuo.
     * @example
     * // Update or create a AtivoContinuo
     * const ativoContinuo = await prisma.ativoContinuo.upsert({
     *   create: {
     *     // ... data to create a AtivoContinuo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AtivoContinuo we want to update
     *   }
     * })
    **/
    upsert<T extends AtivoContinuoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AtivoContinuoUpsertArgs<ExtArgs>>
    ): Prisma__AtivoContinuoClient<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of AtivoContinuos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoCountArgs} args - Arguments to filter AtivoContinuos to count.
     * @example
     * // Count the number of AtivoContinuos
     * const count = await prisma.ativoContinuo.count({
     *   where: {
     *     // ... the filter for the AtivoContinuos we want to count
     *   }
     * })
    **/
    count<T extends AtivoContinuoCountArgs>(
      args?: Subset<T, AtivoContinuoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtivoContinuoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AtivoContinuo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtivoContinuoAggregateArgs>(args: Subset<T, AtivoContinuoAggregateArgs>): Prisma.PrismaPromise<GetAtivoContinuoAggregateType<T>>

    /**
     * Group by AtivoContinuo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtivoContinuoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AtivoContinuoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AtivoContinuoGroupByArgs['orderBy'] }
        : { orderBy?: AtivoContinuoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AtivoContinuoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtivoContinuoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AtivoContinuo model
   */
  readonly fields: AtivoContinuoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AtivoContinuo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AtivoContinuoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    categoria<T extends CategoriaAtivoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaAtivoDefaultArgs<ExtArgs>>): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the AtivoContinuo model
   */ 
  interface AtivoContinuoFieldRefs {
    readonly id: FieldRef<"AtivoContinuo", 'Int'>
    readonly data: FieldRef<"AtivoContinuo", 'DateTime'>
    readonly valor: FieldRef<"AtivoContinuo", 'Float'>
    readonly nome: FieldRef<"AtivoContinuo", 'String'>
    readonly descricao: FieldRef<"AtivoContinuo", 'String'>
    readonly mesComeco: FieldRef<"AtivoContinuo", 'Int'>
    readonly diaPagamento: FieldRef<"AtivoContinuo", 'Int'>
    readonly anualmente: FieldRef<"AtivoContinuo", 'Boolean'>
    readonly idCategoria: FieldRef<"AtivoContinuo", 'String'>
    readonly idUsuario: FieldRef<"AtivoContinuo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * AtivoContinuo findUnique
   */
  export type AtivoContinuoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter, which AtivoContinuo to fetch.
     */
    where: AtivoContinuoWhereUniqueInput
  }

  /**
   * AtivoContinuo findUniqueOrThrow
   */
  export type AtivoContinuoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter, which AtivoContinuo to fetch.
     */
    where: AtivoContinuoWhereUniqueInput
  }

  /**
   * AtivoContinuo findFirst
   */
  export type AtivoContinuoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter, which AtivoContinuo to fetch.
     */
    where?: AtivoContinuoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtivoContinuos to fetch.
     */
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtivoContinuos.
     */
    cursor?: AtivoContinuoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtivoContinuos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtivoContinuos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtivoContinuos.
     */
    distinct?: AtivoContinuoScalarFieldEnum | AtivoContinuoScalarFieldEnum[]
  }

  /**
   * AtivoContinuo findFirstOrThrow
   */
  export type AtivoContinuoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter, which AtivoContinuo to fetch.
     */
    where?: AtivoContinuoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtivoContinuos to fetch.
     */
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtivoContinuos.
     */
    cursor?: AtivoContinuoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtivoContinuos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtivoContinuos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtivoContinuos.
     */
    distinct?: AtivoContinuoScalarFieldEnum | AtivoContinuoScalarFieldEnum[]
  }

  /**
   * AtivoContinuo findMany
   */
  export type AtivoContinuoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter, which AtivoContinuos to fetch.
     */
    where?: AtivoContinuoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtivoContinuos to fetch.
     */
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AtivoContinuos.
     */
    cursor?: AtivoContinuoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtivoContinuos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtivoContinuos.
     */
    skip?: number
    distinct?: AtivoContinuoScalarFieldEnum | AtivoContinuoScalarFieldEnum[]
  }

  /**
   * AtivoContinuo create
   */
  export type AtivoContinuoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * The data needed to create a AtivoContinuo.
     */
    data: XOR<AtivoContinuoCreateInput, AtivoContinuoUncheckedCreateInput>
  }

  /**
   * AtivoContinuo createMany
   */
  export type AtivoContinuoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AtivoContinuos.
     */
    data: AtivoContinuoCreateManyInput | AtivoContinuoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AtivoContinuo createManyAndReturn
   */
  export type AtivoContinuoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * The data used to create many AtivoContinuos.
     */
    data: AtivoContinuoCreateManyInput | AtivoContinuoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AtivoContinuo update
   */
  export type AtivoContinuoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * The data needed to update a AtivoContinuo.
     */
    data: XOR<AtivoContinuoUpdateInput, AtivoContinuoUncheckedUpdateInput>
    /**
     * Choose, which AtivoContinuo to update.
     */
    where: AtivoContinuoWhereUniqueInput
  }

  /**
   * AtivoContinuo updateMany
   */
  export type AtivoContinuoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AtivoContinuos.
     */
    data: XOR<AtivoContinuoUpdateManyMutationInput, AtivoContinuoUncheckedUpdateManyInput>
    /**
     * Filter which AtivoContinuos to update
     */
    where?: AtivoContinuoWhereInput
  }

  /**
   * AtivoContinuo upsert
   */
  export type AtivoContinuoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * The filter to search for the AtivoContinuo to update in case it exists.
     */
    where: AtivoContinuoWhereUniqueInput
    /**
     * In case the AtivoContinuo found by the `where` argument doesn't exist, create a new AtivoContinuo with this data.
     */
    create: XOR<AtivoContinuoCreateInput, AtivoContinuoUncheckedCreateInput>
    /**
     * In case the AtivoContinuo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AtivoContinuoUpdateInput, AtivoContinuoUncheckedUpdateInput>
  }

  /**
   * AtivoContinuo delete
   */
  export type AtivoContinuoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    /**
     * Filter which AtivoContinuo to delete.
     */
    where: AtivoContinuoWhereUniqueInput
  }

  /**
   * AtivoContinuo deleteMany
   */
  export type AtivoContinuoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtivoContinuos to delete
     */
    where?: AtivoContinuoWhereInput
  }

  /**
   * AtivoContinuo without action
   */
  export type AtivoContinuoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaAtivo
   */

  export type AggregateCategoriaAtivo = {
    _count: CategoriaAtivoCountAggregateOutputType | null
    _avg: CategoriaAtivoAvgAggregateOutputType | null
    _sum: CategoriaAtivoSumAggregateOutputType | null
    _min: CategoriaAtivoMinAggregateOutputType | null
    _max: CategoriaAtivoMaxAggregateOutputType | null
  }

  export type CategoriaAtivoAvgAggregateOutputType = {
    idUsuario: number | null
  }

  export type CategoriaAtivoSumAggregateOutputType = {
    idUsuario: number | null
  }

  export type CategoriaAtivoMinAggregateOutputType = {
    id: string | null
    cores: string | null
    idUsuario: number | null
  }

  export type CategoriaAtivoMaxAggregateOutputType = {
    id: string | null
    cores: string | null
    idUsuario: number | null
  }

  export type CategoriaAtivoCountAggregateOutputType = {
    id: number
    cores: number
    idUsuario: number
    _all: number
  }


  export type CategoriaAtivoAvgAggregateInputType = {
    idUsuario?: true
  }

  export type CategoriaAtivoSumAggregateInputType = {
    idUsuario?: true
  }

  export type CategoriaAtivoMinAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
  }

  export type CategoriaAtivoMaxAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
  }

  export type CategoriaAtivoCountAggregateInputType = {
    id?: true
    cores?: true
    idUsuario?: true
    _all?: true
  }

  export type CategoriaAtivoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaAtivo to aggregate.
     */
    where?: CategoriaAtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaAtivos to fetch.
     */
    orderBy?: CategoriaAtivoOrderByWithRelationInput | CategoriaAtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaAtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaAtivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaAtivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaAtivos
    **/
    _count?: true | CategoriaAtivoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAtivoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaAtivoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaAtivoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaAtivoMaxAggregateInputType
  }

  export type GetCategoriaAtivoAggregateType<T extends CategoriaAtivoAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaAtivo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaAtivo[P]>
      : GetScalarType<T[P], AggregateCategoriaAtivo[P]>
  }




  export type CategoriaAtivoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaAtivoWhereInput
    orderBy?: CategoriaAtivoOrderByWithAggregationInput | CategoriaAtivoOrderByWithAggregationInput[]
    by: CategoriaAtivoScalarFieldEnum[] | CategoriaAtivoScalarFieldEnum
    having?: CategoriaAtivoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaAtivoCountAggregateInputType | true
    _avg?: CategoriaAtivoAvgAggregateInputType
    _sum?: CategoriaAtivoSumAggregateInputType
    _min?: CategoriaAtivoMinAggregateInputType
    _max?: CategoriaAtivoMaxAggregateInputType
  }

  export type CategoriaAtivoGroupByOutputType = {
    id: string
    cores: string
    idUsuario: number
    _count: CategoriaAtivoCountAggregateOutputType | null
    _avg: CategoriaAtivoAvgAggregateOutputType | null
    _sum: CategoriaAtivoSumAggregateOutputType | null
    _min: CategoriaAtivoMinAggregateOutputType | null
    _max: CategoriaAtivoMaxAggregateOutputType | null
  }

  type GetCategoriaAtivoGroupByPayload<T extends CategoriaAtivoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaAtivoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaAtivoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaAtivoGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaAtivoGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaAtivoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cores?: boolean
    idUsuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ativosContinuos?: boolean | CategoriaAtivo$ativosContinuosArgs<ExtArgs>
    ativos?: boolean | CategoriaAtivo$ativosArgs<ExtArgs>
    _count?: boolean | CategoriaAtivoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaAtivo"]>

  export type CategoriaAtivoSelectScalar = {
    id?: boolean
    cores?: boolean
    idUsuario?: boolean
  }


  export type CategoriaAtivoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    ativosContinuos?: boolean | CategoriaAtivo$ativosContinuosArgs<ExtArgs>
    ativos?: boolean | CategoriaAtivo$ativosArgs<ExtArgs>
    _count?: boolean | CategoriaAtivoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CategoriaAtivoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaAtivo"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      ativosContinuos: Prisma.$AtivoContinuoPayload<ExtArgs>[]
      ativos: Prisma.$AtivoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cores: string
      idUsuario: number
    }, ExtArgs["result"]["categoriaAtivo"]>
    composites: {}
  }


  type CategoriaAtivoGetPayload<S extends boolean | null | undefined | CategoriaAtivoDefaultArgs> = $Result.GetResult<Prisma.$CategoriaAtivoPayload, S>

  type CategoriaAtivoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriaAtivoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriaAtivoCountAggregateInputType | true
    }

  export interface CategoriaAtivoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaAtivo'], meta: { name: 'CategoriaAtivo' } }
    /**
     * Find zero or one CategoriaAtivo that matches the filter.
     * @param {CategoriaAtivoFindUniqueArgs} args - Arguments to find a CategoriaAtivo
     * @example
     * // Get one CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriaAtivoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CategoriaAtivo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoriaAtivoFindUniqueOrThrowArgs} args - Arguments to find a CategoriaAtivo
     * @example
     * // Get one CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriaAtivoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CategoriaAtivo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoFindFirstArgs} args - Arguments to find a CategoriaAtivo
     * @example
     * // Get one CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriaAtivoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CategoriaAtivo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoFindFirstOrThrowArgs} args - Arguments to find a CategoriaAtivo
     * @example
     * // Get one CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriaAtivoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CategoriaAtivos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaAtivos
     * const categoriaAtivos = await prisma.categoriaAtivo.findMany()
     * 
     * // Get first 10 CategoriaAtivos
     * const categoriaAtivos = await prisma.categoriaAtivo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaAtivoWithIdOnly = await prisma.categoriaAtivo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriaAtivoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CategoriaAtivo.
     * @param {CategoriaAtivoCreateArgs} args - Arguments to create a CategoriaAtivo.
     * @example
     * // Create one CategoriaAtivo
     * const CategoriaAtivo = await prisma.categoriaAtivo.create({
     *   data: {
     *     // ... data to create a CategoriaAtivo
     *   }
     * })
     * 
    **/
    create<T extends CategoriaAtivoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoCreateArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CategoriaAtivos.
     * @param {CategoriaAtivoCreateManyArgs} args - Arguments to create many CategoriaAtivos.
     * @example
     * // Create many CategoriaAtivos
     * const categoriaAtivo = await prisma.categoriaAtivo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CategoriaAtivoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaAtivos and returns the data saved in the database.
     * @param {CategoriaAtivoCreateManyAndReturnArgs} args - Arguments to create many CategoriaAtivos.
     * @example
     * // Create many CategoriaAtivos
     * const categoriaAtivo = await prisma.categoriaAtivo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaAtivos and only return the `id`
     * const categoriaAtivoWithIdOnly = await prisma.categoriaAtivo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CategoriaAtivoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a CategoriaAtivo.
     * @param {CategoriaAtivoDeleteArgs} args - Arguments to delete one CategoriaAtivo.
     * @example
     * // Delete one CategoriaAtivo
     * const CategoriaAtivo = await prisma.categoriaAtivo.delete({
     *   where: {
     *     // ... filter to delete one CategoriaAtivo
     *   }
     * })
     * 
    **/
    delete<T extends CategoriaAtivoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoDeleteArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CategoriaAtivo.
     * @param {CategoriaAtivoUpdateArgs} args - Arguments to update one CategoriaAtivo.
     * @example
     * // Update one CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriaAtivoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoUpdateArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CategoriaAtivos.
     * @param {CategoriaAtivoDeleteManyArgs} args - Arguments to filter CategoriaAtivos to delete.
     * @example
     * // Delete a few CategoriaAtivos
     * const { count } = await prisma.categoriaAtivo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriaAtivoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriaAtivoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaAtivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaAtivos
     * const categoriaAtivo = await prisma.categoriaAtivo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriaAtivoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CategoriaAtivo.
     * @param {CategoriaAtivoUpsertArgs} args - Arguments to update or create a CategoriaAtivo.
     * @example
     * // Update or create a CategoriaAtivo
     * const categoriaAtivo = await prisma.categoriaAtivo.upsert({
     *   create: {
     *     // ... data to create a CategoriaAtivo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaAtivo we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriaAtivoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriaAtivoUpsertArgs<ExtArgs>>
    ): Prisma__CategoriaAtivoClient<$Result.GetResult<Prisma.$CategoriaAtivoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CategoriaAtivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoCountArgs} args - Arguments to filter CategoriaAtivos to count.
     * @example
     * // Count the number of CategoriaAtivos
     * const count = await prisma.categoriaAtivo.count({
     *   where: {
     *     // ... the filter for the CategoriaAtivos we want to count
     *   }
     * })
    **/
    count<T extends CategoriaAtivoCountArgs>(
      args?: Subset<T, CategoriaAtivoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaAtivoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaAtivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAtivoAggregateArgs>(args: Subset<T, CategoriaAtivoAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAtivoAggregateType<T>>

    /**
     * Group by CategoriaAtivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAtivoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaAtivoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaAtivoGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaAtivoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaAtivoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaAtivoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaAtivo model
   */
  readonly fields: CategoriaAtivoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaAtivo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaAtivoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    ativosContinuos<T extends CategoriaAtivo$ativosContinuosArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaAtivo$ativosContinuosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoContinuoPayload<ExtArgs>, T, 'findMany'> | Null>;

    ativos<T extends CategoriaAtivo$ativosArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaAtivo$ativosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CategoriaAtivo model
   */ 
  interface CategoriaAtivoFieldRefs {
    readonly id: FieldRef<"CategoriaAtivo", 'String'>
    readonly cores: FieldRef<"CategoriaAtivo", 'String'>
    readonly idUsuario: FieldRef<"CategoriaAtivo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaAtivo findUnique
   */
  export type CategoriaAtivoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaAtivo to fetch.
     */
    where: CategoriaAtivoWhereUniqueInput
  }

  /**
   * CategoriaAtivo findUniqueOrThrow
   */
  export type CategoriaAtivoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaAtivo to fetch.
     */
    where: CategoriaAtivoWhereUniqueInput
  }

  /**
   * CategoriaAtivo findFirst
   */
  export type CategoriaAtivoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaAtivo to fetch.
     */
    where?: CategoriaAtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaAtivos to fetch.
     */
    orderBy?: CategoriaAtivoOrderByWithRelationInput | CategoriaAtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaAtivos.
     */
    cursor?: CategoriaAtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaAtivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaAtivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaAtivos.
     */
    distinct?: CategoriaAtivoScalarFieldEnum | CategoriaAtivoScalarFieldEnum[]
  }

  /**
   * CategoriaAtivo findFirstOrThrow
   */
  export type CategoriaAtivoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaAtivo to fetch.
     */
    where?: CategoriaAtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaAtivos to fetch.
     */
    orderBy?: CategoriaAtivoOrderByWithRelationInput | CategoriaAtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaAtivos.
     */
    cursor?: CategoriaAtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaAtivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaAtivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaAtivos.
     */
    distinct?: CategoriaAtivoScalarFieldEnum | CategoriaAtivoScalarFieldEnum[]
  }

  /**
   * CategoriaAtivo findMany
   */
  export type CategoriaAtivoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaAtivos to fetch.
     */
    where?: CategoriaAtivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaAtivos to fetch.
     */
    orderBy?: CategoriaAtivoOrderByWithRelationInput | CategoriaAtivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaAtivos.
     */
    cursor?: CategoriaAtivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaAtivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaAtivos.
     */
    skip?: number
    distinct?: CategoriaAtivoScalarFieldEnum | CategoriaAtivoScalarFieldEnum[]
  }

  /**
   * CategoriaAtivo create
   */
  export type CategoriaAtivoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaAtivo.
     */
    data: XOR<CategoriaAtivoCreateInput, CategoriaAtivoUncheckedCreateInput>
  }

  /**
   * CategoriaAtivo createMany
   */
  export type CategoriaAtivoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaAtivos.
     */
    data: CategoriaAtivoCreateManyInput | CategoriaAtivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaAtivo createManyAndReturn
   */
  export type CategoriaAtivoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * The data used to create many CategoriaAtivos.
     */
    data: CategoriaAtivoCreateManyInput | CategoriaAtivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaAtivo update
   */
  export type CategoriaAtivoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaAtivo.
     */
    data: XOR<CategoriaAtivoUpdateInput, CategoriaAtivoUncheckedUpdateInput>
    /**
     * Choose, which CategoriaAtivo to update.
     */
    where: CategoriaAtivoWhereUniqueInput
  }

  /**
   * CategoriaAtivo updateMany
   */
  export type CategoriaAtivoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaAtivos.
     */
    data: XOR<CategoriaAtivoUpdateManyMutationInput, CategoriaAtivoUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaAtivos to update
     */
    where?: CategoriaAtivoWhereInput
  }

  /**
   * CategoriaAtivo upsert
   */
  export type CategoriaAtivoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaAtivo to update in case it exists.
     */
    where: CategoriaAtivoWhereUniqueInput
    /**
     * In case the CategoriaAtivo found by the `where` argument doesn't exist, create a new CategoriaAtivo with this data.
     */
    create: XOR<CategoriaAtivoCreateInput, CategoriaAtivoUncheckedCreateInput>
    /**
     * In case the CategoriaAtivo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaAtivoUpdateInput, CategoriaAtivoUncheckedUpdateInput>
  }

  /**
   * CategoriaAtivo delete
   */
  export type CategoriaAtivoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
    /**
     * Filter which CategoriaAtivo to delete.
     */
    where: CategoriaAtivoWhereUniqueInput
  }

  /**
   * CategoriaAtivo deleteMany
   */
  export type CategoriaAtivoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaAtivos to delete
     */
    where?: CategoriaAtivoWhereInput
  }

  /**
   * CategoriaAtivo.ativosContinuos
   */
  export type CategoriaAtivo$ativosContinuosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtivoContinuo
     */
    select?: AtivoContinuoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoContinuoInclude<ExtArgs> | null
    where?: AtivoContinuoWhereInput
    orderBy?: AtivoContinuoOrderByWithRelationInput | AtivoContinuoOrderByWithRelationInput[]
    cursor?: AtivoContinuoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtivoContinuoScalarFieldEnum | AtivoContinuoScalarFieldEnum[]
  }

  /**
   * CategoriaAtivo.ativos
   */
  export type CategoriaAtivo$ativosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ativo
     */
    select?: AtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtivoInclude<ExtArgs> | null
    where?: AtivoWhereInput
    orderBy?: AtivoOrderByWithRelationInput | AtivoOrderByWithRelationInput[]
    cursor?: AtivoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtivoScalarFieldEnum | AtivoScalarFieldEnum[]
  }

  /**
   * CategoriaAtivo without action
   */
  export type CategoriaAtivoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaAtivo
     */
    select?: CategoriaAtivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaAtivoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    username: 'username',
    nome: 'nome',
    sobrenome: 'sobrenome',
    email: 'email',
    senha: 'senha',
    foto: 'foto'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const DespesaScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor: 'valor',
    nome: 'nome',
    descricao: 'descricao',
    idCategoria: 'idCategoria',
    idUsuario: 'idUsuario'
  };

  export type DespesaScalarFieldEnum = (typeof DespesaScalarFieldEnum)[keyof typeof DespesaScalarFieldEnum]


  export const DespesaContinuaScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor: 'valor',
    nome: 'nome',
    descricao: 'descricao',
    mesComeco: 'mesComeco',
    diaPagamento: 'diaPagamento',
    anualmente: 'anualmente',
    idCategoria: 'idCategoria',
    idUsuario: 'idUsuario'
  };

  export type DespesaContinuaScalarFieldEnum = (typeof DespesaContinuaScalarFieldEnum)[keyof typeof DespesaContinuaScalarFieldEnum]


  export const CategoriaDespesaScalarFieldEnum: {
    id: 'id',
    cores: 'cores',
    idUsuario: 'idUsuario'
  };

  export type CategoriaDespesaScalarFieldEnum = (typeof CategoriaDespesaScalarFieldEnum)[keyof typeof CategoriaDespesaScalarFieldEnum]


  export const AtivoScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor: 'valor',
    nome: 'nome',
    descricao: 'descricao',
    idCategoria: 'idCategoria',
    idUsuario: 'idUsuario'
  };

  export type AtivoScalarFieldEnum = (typeof AtivoScalarFieldEnum)[keyof typeof AtivoScalarFieldEnum]


  export const AtivoContinuoScalarFieldEnum: {
    id: 'id',
    data: 'data',
    valor: 'valor',
    nome: 'nome',
    descricao: 'descricao',
    mesComeco: 'mesComeco',
    diaPagamento: 'diaPagamento',
    anualmente: 'anualmente',
    idCategoria: 'idCategoria',
    idUsuario: 'idUsuario'
  };

  export type AtivoContinuoScalarFieldEnum = (typeof AtivoContinuoScalarFieldEnum)[keyof typeof AtivoContinuoScalarFieldEnum]


  export const CategoriaAtivoScalarFieldEnum: {
    id: 'id',
    cores: 'cores',
    idUsuario: 'idUsuario'
  };

  export type CategoriaAtivoScalarFieldEnum = (typeof CategoriaAtivoScalarFieldEnum)[keyof typeof CategoriaAtivoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    username?: StringFilter<"Usuario"> | string
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    foto?: BytesNullableFilter<"Usuario"> | Buffer | null
    despesas?: DespesaListRelationFilter
    despesasContinuas?: DespesaContinuaListRelationFilter
    ativos?: AtivoListRelationFilter
    ativosContinuos?: AtivoContinuoListRelationFilter
    categoriasAtivos?: CategoriaAtivoListRelationFilter
    categoriasDespesas?: CategoriaDespesaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrderInput | SortOrder
    despesas?: DespesaOrderByRelationAggregateInput
    despesasContinuas?: DespesaContinuaOrderByRelationAggregateInput
    ativos?: AtivoOrderByRelationAggregateInput
    ativosContinuos?: AtivoContinuoOrderByRelationAggregateInput
    categoriasAtivos?: CategoriaAtivoOrderByRelationAggregateInput
    categoriasDespesas?: CategoriaDespesaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    foto?: BytesNullableFilter<"Usuario"> | Buffer | null
    despesas?: DespesaListRelationFilter
    despesasContinuas?: DespesaContinuaListRelationFilter
    ativos?: AtivoListRelationFilter
    ativosContinuos?: AtivoContinuoListRelationFilter
    categoriasAtivos?: CategoriaAtivoListRelationFilter
    categoriasDespesas?: CategoriaDespesaListRelationFilter
  }, "id" | "username" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    username?: StringWithAggregatesFilter<"Usuario"> | string
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    sobrenome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    senha?: StringWithAggregatesFilter<"Usuario"> | string
    foto?: BytesNullableWithAggregatesFilter<"Usuario"> | Buffer | null
  }

  export type DespesaWhereInput = {
    AND?: DespesaWhereInput | DespesaWhereInput[]
    OR?: DespesaWhereInput[]
    NOT?: DespesaWhereInput | DespesaWhereInput[]
    id?: IntFilter<"Despesa"> | number
    data?: DateTimeFilter<"Despesa"> | Date | string
    valor?: FloatFilter<"Despesa"> | number
    nome?: StringFilter<"Despesa"> | string
    descricao?: StringFilter<"Despesa"> | string
    idCategoria?: StringFilter<"Despesa"> | string
    idUsuario?: IntFilter<"Despesa"> | number
    categoria?: XOR<CategoriaDespesaRelationFilter, CategoriaDespesaWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type DespesaOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    categoria?: CategoriaDespesaOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DespesaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DespesaWhereInput | DespesaWhereInput[]
    OR?: DespesaWhereInput[]
    NOT?: DespesaWhereInput | DespesaWhereInput[]
    data?: DateTimeFilter<"Despesa"> | Date | string
    valor?: FloatFilter<"Despesa"> | number
    nome?: StringFilter<"Despesa"> | string
    descricao?: StringFilter<"Despesa"> | string
    idCategoria?: StringFilter<"Despesa"> | string
    idUsuario?: IntFilter<"Despesa"> | number
    categoria?: XOR<CategoriaDespesaRelationFilter, CategoriaDespesaWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type DespesaOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    _count?: DespesaCountOrderByAggregateInput
    _avg?: DespesaAvgOrderByAggregateInput
    _max?: DespesaMaxOrderByAggregateInput
    _min?: DespesaMinOrderByAggregateInput
    _sum?: DespesaSumOrderByAggregateInput
  }

  export type DespesaScalarWhereWithAggregatesInput = {
    AND?: DespesaScalarWhereWithAggregatesInput | DespesaScalarWhereWithAggregatesInput[]
    OR?: DespesaScalarWhereWithAggregatesInput[]
    NOT?: DespesaScalarWhereWithAggregatesInput | DespesaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Despesa"> | number
    data?: DateTimeWithAggregatesFilter<"Despesa"> | Date | string
    valor?: FloatWithAggregatesFilter<"Despesa"> | number
    nome?: StringWithAggregatesFilter<"Despesa"> | string
    descricao?: StringWithAggregatesFilter<"Despesa"> | string
    idCategoria?: StringWithAggregatesFilter<"Despesa"> | string
    idUsuario?: IntWithAggregatesFilter<"Despesa"> | number
  }

  export type DespesaContinuaWhereInput = {
    AND?: DespesaContinuaWhereInput | DespesaContinuaWhereInput[]
    OR?: DespesaContinuaWhereInput[]
    NOT?: DespesaContinuaWhereInput | DespesaContinuaWhereInput[]
    id?: IntFilter<"DespesaContinua"> | number
    data?: DateTimeFilter<"DespesaContinua"> | Date | string
    valor?: FloatFilter<"DespesaContinua"> | number
    nome?: StringFilter<"DespesaContinua"> | string
    descricao?: StringFilter<"DespesaContinua"> | string
    mesComeco?: IntFilter<"DespesaContinua"> | number
    diaPagamento?: IntFilter<"DespesaContinua"> | number
    anualmente?: BoolFilter<"DespesaContinua"> | boolean
    idCategoria?: StringFilter<"DespesaContinua"> | string
    idUsuario?: IntFilter<"DespesaContinua"> | number
    categoria?: XOR<CategoriaDespesaRelationFilter, CategoriaDespesaWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type DespesaContinuaOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    categoria?: CategoriaDespesaOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DespesaContinuaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DespesaContinuaWhereInput | DespesaContinuaWhereInput[]
    OR?: DespesaContinuaWhereInput[]
    NOT?: DespesaContinuaWhereInput | DespesaContinuaWhereInput[]
    data?: DateTimeFilter<"DespesaContinua"> | Date | string
    valor?: FloatFilter<"DespesaContinua"> | number
    nome?: StringFilter<"DespesaContinua"> | string
    descricao?: StringFilter<"DespesaContinua"> | string
    mesComeco?: IntFilter<"DespesaContinua"> | number
    diaPagamento?: IntFilter<"DespesaContinua"> | number
    anualmente?: BoolFilter<"DespesaContinua"> | boolean
    idCategoria?: StringFilter<"DespesaContinua"> | string
    idUsuario?: IntFilter<"DespesaContinua"> | number
    categoria?: XOR<CategoriaDespesaRelationFilter, CategoriaDespesaWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type DespesaContinuaOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    _count?: DespesaContinuaCountOrderByAggregateInput
    _avg?: DespesaContinuaAvgOrderByAggregateInput
    _max?: DespesaContinuaMaxOrderByAggregateInput
    _min?: DespesaContinuaMinOrderByAggregateInput
    _sum?: DespesaContinuaSumOrderByAggregateInput
  }

  export type DespesaContinuaScalarWhereWithAggregatesInput = {
    AND?: DespesaContinuaScalarWhereWithAggregatesInput | DespesaContinuaScalarWhereWithAggregatesInput[]
    OR?: DespesaContinuaScalarWhereWithAggregatesInput[]
    NOT?: DespesaContinuaScalarWhereWithAggregatesInput | DespesaContinuaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DespesaContinua"> | number
    data?: DateTimeWithAggregatesFilter<"DespesaContinua"> | Date | string
    valor?: FloatWithAggregatesFilter<"DespesaContinua"> | number
    nome?: StringWithAggregatesFilter<"DespesaContinua"> | string
    descricao?: StringWithAggregatesFilter<"DespesaContinua"> | string
    mesComeco?: IntWithAggregatesFilter<"DespesaContinua"> | number
    diaPagamento?: IntWithAggregatesFilter<"DespesaContinua"> | number
    anualmente?: BoolWithAggregatesFilter<"DespesaContinua"> | boolean
    idCategoria?: StringWithAggregatesFilter<"DespesaContinua"> | string
    idUsuario?: IntWithAggregatesFilter<"DespesaContinua"> | number
  }

  export type CategoriaDespesaWhereInput = {
    AND?: CategoriaDespesaWhereInput | CategoriaDespesaWhereInput[]
    OR?: CategoriaDespesaWhereInput[]
    NOT?: CategoriaDespesaWhereInput | CategoriaDespesaWhereInput[]
    id?: StringFilter<"CategoriaDespesa"> | string
    cores?: StringFilter<"CategoriaDespesa"> | string
    idUsuario?: IntFilter<"CategoriaDespesa"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    despesasContinuas?: DespesaContinuaListRelationFilter
    despesas?: DespesaListRelationFilter
  }

  export type CategoriaDespesaOrderByWithRelationInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    despesasContinuas?: DespesaContinuaOrderByRelationAggregateInput
    despesas?: DespesaOrderByRelationAggregateInput
  }

  export type CategoriaDespesaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CategoriaDespesaWhereInput | CategoriaDespesaWhereInput[]
    OR?: CategoriaDespesaWhereInput[]
    NOT?: CategoriaDespesaWhereInput | CategoriaDespesaWhereInput[]
    cores?: StringFilter<"CategoriaDespesa"> | string
    idUsuario?: IntFilter<"CategoriaDespesa"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    despesasContinuas?: DespesaContinuaListRelationFilter
    despesas?: DespesaListRelationFilter
  }, "id">

  export type CategoriaDespesaOrderByWithAggregationInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
    _count?: CategoriaDespesaCountOrderByAggregateInput
    _avg?: CategoriaDespesaAvgOrderByAggregateInput
    _max?: CategoriaDespesaMaxOrderByAggregateInput
    _min?: CategoriaDespesaMinOrderByAggregateInput
    _sum?: CategoriaDespesaSumOrderByAggregateInput
  }

  export type CategoriaDespesaScalarWhereWithAggregatesInput = {
    AND?: CategoriaDespesaScalarWhereWithAggregatesInput | CategoriaDespesaScalarWhereWithAggregatesInput[]
    OR?: CategoriaDespesaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaDespesaScalarWhereWithAggregatesInput | CategoriaDespesaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CategoriaDespesa"> | string
    cores?: StringWithAggregatesFilter<"CategoriaDespesa"> | string
    idUsuario?: IntWithAggregatesFilter<"CategoriaDespesa"> | number
  }

  export type AtivoWhereInput = {
    AND?: AtivoWhereInput | AtivoWhereInput[]
    OR?: AtivoWhereInput[]
    NOT?: AtivoWhereInput | AtivoWhereInput[]
    id?: IntFilter<"Ativo"> | number
    data?: DateTimeFilter<"Ativo"> | Date | string
    valor?: FloatFilter<"Ativo"> | number
    nome?: StringFilter<"Ativo"> | string
    descricao?: StringFilter<"Ativo"> | string
    idCategoria?: StringFilter<"Ativo"> | string
    idUsuario?: IntFilter<"Ativo"> | number
    categoria?: XOR<CategoriaAtivoRelationFilter, CategoriaAtivoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type AtivoOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    categoria?: CategoriaAtivoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type AtivoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AtivoWhereInput | AtivoWhereInput[]
    OR?: AtivoWhereInput[]
    NOT?: AtivoWhereInput | AtivoWhereInput[]
    data?: DateTimeFilter<"Ativo"> | Date | string
    valor?: FloatFilter<"Ativo"> | number
    nome?: StringFilter<"Ativo"> | string
    descricao?: StringFilter<"Ativo"> | string
    idCategoria?: StringFilter<"Ativo"> | string
    idUsuario?: IntFilter<"Ativo"> | number
    categoria?: XOR<CategoriaAtivoRelationFilter, CategoriaAtivoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type AtivoOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    _count?: AtivoCountOrderByAggregateInput
    _avg?: AtivoAvgOrderByAggregateInput
    _max?: AtivoMaxOrderByAggregateInput
    _min?: AtivoMinOrderByAggregateInput
    _sum?: AtivoSumOrderByAggregateInput
  }

  export type AtivoScalarWhereWithAggregatesInput = {
    AND?: AtivoScalarWhereWithAggregatesInput | AtivoScalarWhereWithAggregatesInput[]
    OR?: AtivoScalarWhereWithAggregatesInput[]
    NOT?: AtivoScalarWhereWithAggregatesInput | AtivoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ativo"> | number
    data?: DateTimeWithAggregatesFilter<"Ativo"> | Date | string
    valor?: FloatWithAggregatesFilter<"Ativo"> | number
    nome?: StringWithAggregatesFilter<"Ativo"> | string
    descricao?: StringWithAggregatesFilter<"Ativo"> | string
    idCategoria?: StringWithAggregatesFilter<"Ativo"> | string
    idUsuario?: IntWithAggregatesFilter<"Ativo"> | number
  }

  export type AtivoContinuoWhereInput = {
    AND?: AtivoContinuoWhereInput | AtivoContinuoWhereInput[]
    OR?: AtivoContinuoWhereInput[]
    NOT?: AtivoContinuoWhereInput | AtivoContinuoWhereInput[]
    id?: IntFilter<"AtivoContinuo"> | number
    data?: DateTimeFilter<"AtivoContinuo"> | Date | string
    valor?: FloatFilter<"AtivoContinuo"> | number
    nome?: StringFilter<"AtivoContinuo"> | string
    descricao?: StringFilter<"AtivoContinuo"> | string
    mesComeco?: IntFilter<"AtivoContinuo"> | number
    diaPagamento?: IntFilter<"AtivoContinuo"> | number
    anualmente?: BoolFilter<"AtivoContinuo"> | boolean
    idCategoria?: StringFilter<"AtivoContinuo"> | string
    idUsuario?: IntFilter<"AtivoContinuo"> | number
    categoria?: XOR<CategoriaAtivoRelationFilter, CategoriaAtivoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type AtivoContinuoOrderByWithRelationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    categoria?: CategoriaAtivoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type AtivoContinuoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AtivoContinuoWhereInput | AtivoContinuoWhereInput[]
    OR?: AtivoContinuoWhereInput[]
    NOT?: AtivoContinuoWhereInput | AtivoContinuoWhereInput[]
    data?: DateTimeFilter<"AtivoContinuo"> | Date | string
    valor?: FloatFilter<"AtivoContinuo"> | number
    nome?: StringFilter<"AtivoContinuo"> | string
    descricao?: StringFilter<"AtivoContinuo"> | string
    mesComeco?: IntFilter<"AtivoContinuo"> | number
    diaPagamento?: IntFilter<"AtivoContinuo"> | number
    anualmente?: BoolFilter<"AtivoContinuo"> | boolean
    idCategoria?: StringFilter<"AtivoContinuo"> | string
    idUsuario?: IntFilter<"AtivoContinuo"> | number
    categoria?: XOR<CategoriaAtivoRelationFilter, CategoriaAtivoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type AtivoContinuoOrderByWithAggregationInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
    _count?: AtivoContinuoCountOrderByAggregateInput
    _avg?: AtivoContinuoAvgOrderByAggregateInput
    _max?: AtivoContinuoMaxOrderByAggregateInput
    _min?: AtivoContinuoMinOrderByAggregateInput
    _sum?: AtivoContinuoSumOrderByAggregateInput
  }

  export type AtivoContinuoScalarWhereWithAggregatesInput = {
    AND?: AtivoContinuoScalarWhereWithAggregatesInput | AtivoContinuoScalarWhereWithAggregatesInput[]
    OR?: AtivoContinuoScalarWhereWithAggregatesInput[]
    NOT?: AtivoContinuoScalarWhereWithAggregatesInput | AtivoContinuoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AtivoContinuo"> | number
    data?: DateTimeWithAggregatesFilter<"AtivoContinuo"> | Date | string
    valor?: FloatWithAggregatesFilter<"AtivoContinuo"> | number
    nome?: StringWithAggregatesFilter<"AtivoContinuo"> | string
    descricao?: StringWithAggregatesFilter<"AtivoContinuo"> | string
    mesComeco?: IntWithAggregatesFilter<"AtivoContinuo"> | number
    diaPagamento?: IntWithAggregatesFilter<"AtivoContinuo"> | number
    anualmente?: BoolWithAggregatesFilter<"AtivoContinuo"> | boolean
    idCategoria?: StringWithAggregatesFilter<"AtivoContinuo"> | string
    idUsuario?: IntWithAggregatesFilter<"AtivoContinuo"> | number
  }

  export type CategoriaAtivoWhereInput = {
    AND?: CategoriaAtivoWhereInput | CategoriaAtivoWhereInput[]
    OR?: CategoriaAtivoWhereInput[]
    NOT?: CategoriaAtivoWhereInput | CategoriaAtivoWhereInput[]
    id?: StringFilter<"CategoriaAtivo"> | string
    cores?: StringFilter<"CategoriaAtivo"> | string
    idUsuario?: IntFilter<"CategoriaAtivo"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    ativosContinuos?: AtivoContinuoListRelationFilter
    ativos?: AtivoListRelationFilter
  }

  export type CategoriaAtivoOrderByWithRelationInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    ativosContinuos?: AtivoContinuoOrderByRelationAggregateInput
    ativos?: AtivoOrderByRelationAggregateInput
  }

  export type CategoriaAtivoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CategoriaAtivoWhereInput | CategoriaAtivoWhereInput[]
    OR?: CategoriaAtivoWhereInput[]
    NOT?: CategoriaAtivoWhereInput | CategoriaAtivoWhereInput[]
    cores?: StringFilter<"CategoriaAtivo"> | string
    idUsuario?: IntFilter<"CategoriaAtivo"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    ativosContinuos?: AtivoContinuoListRelationFilter
    ativos?: AtivoListRelationFilter
  }, "id">

  export type CategoriaAtivoOrderByWithAggregationInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
    _count?: CategoriaAtivoCountOrderByAggregateInput
    _avg?: CategoriaAtivoAvgOrderByAggregateInput
    _max?: CategoriaAtivoMaxOrderByAggregateInput
    _min?: CategoriaAtivoMinOrderByAggregateInput
    _sum?: CategoriaAtivoSumOrderByAggregateInput
  }

  export type CategoriaAtivoScalarWhereWithAggregatesInput = {
    AND?: CategoriaAtivoScalarWhereWithAggregatesInput | CategoriaAtivoScalarWhereWithAggregatesInput[]
    OR?: CategoriaAtivoScalarWhereWithAggregatesInput[]
    NOT?: CategoriaAtivoScalarWhereWithAggregatesInput | CategoriaAtivoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CategoriaAtivo"> | string
    cores?: StringWithAggregatesFilter<"CategoriaAtivo"> | string
    idUsuario?: IntWithAggregatesFilter<"CategoriaAtivo"> | number
  }

  export type UsuarioCreateInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
  }

  export type UsuarioUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type DespesaCreateInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    categoria: CategoriaDespesaCreateNestedOneWithoutDespesasInput
    usuario: UsuarioCreateNestedOneWithoutDespesasInput
  }

  export type DespesaUncheckedCreateInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
  }

  export type DespesaUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    categoria?: CategoriaDespesaUpdateOneRequiredWithoutDespesasNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDespesasNestedInput
  }

  export type DespesaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaCreateManyInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
  }

  export type DespesaUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type DespesaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaContinuaCreateInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    categoria: CategoriaDespesaCreateNestedOneWithoutDespesasContinuasInput
    usuario: UsuarioCreateNestedOneWithoutDespesasContinuasInput
  }

  export type DespesaContinuaUncheckedCreateInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
  }

  export type DespesaContinuaUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    categoria?: CategoriaDespesaUpdateOneRequiredWithoutDespesasContinuasNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutDespesasContinuasNestedInput
  }

  export type DespesaContinuaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaContinuaCreateManyInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
  }

  export type DespesaContinuaUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DespesaContinuaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaDespesaCreateInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasDespesasInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutCategoriaInput
    despesas?: DespesaCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaUncheckedCreateInput = {
    id: string
    cores: string
    idUsuario: number
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutCategoriaInput
    despesas?: DespesaUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasDespesasNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutCategoriaNestedInput
    despesas?: DespesaUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutCategoriaNestedInput
    despesas?: DespesaUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaCreateManyInput = {
    id: string
    cores: string
    idUsuario: number
  }

  export type CategoriaDespesaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaDespesaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoCreateInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    categoria: CategoriaAtivoCreateNestedOneWithoutAtivosInput
    usuario: UsuarioCreateNestedOneWithoutAtivosInput
  }

  export type AtivoUncheckedCreateInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
  }

  export type AtivoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    categoria?: CategoriaAtivoUpdateOneRequiredWithoutAtivosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutAtivosNestedInput
  }

  export type AtivoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoCreateManyInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
    idUsuario: number
  }

  export type AtivoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type AtivoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoContinuoCreateInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    categoria: CategoriaAtivoCreateNestedOneWithoutAtivosContinuosInput
    usuario: UsuarioCreateNestedOneWithoutAtivosContinuosInput
  }

  export type AtivoContinuoUncheckedCreateInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
  }

  export type AtivoContinuoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    categoria?: CategoriaAtivoUpdateOneRequiredWithoutAtivosContinuosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutAtivosContinuosNestedInput
  }

  export type AtivoContinuoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoContinuoCreateManyInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
    idUsuario: number
  }

  export type AtivoContinuoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AtivoContinuoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaAtivoCreateInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasAtivosInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutCategoriaInput
    ativos?: AtivoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoUncheckedCreateInput = {
    id: string
    cores: string
    idUsuario: number
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutCategoriaInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasAtivosNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutCategoriaNestedInput
    ativos?: AtivoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutCategoriaNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoCreateManyInput = {
    id: string
    cores: string
    idUsuario: number
  }

  export type CategoriaAtivoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaAtivoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type DespesaListRelationFilter = {
    every?: DespesaWhereInput
    some?: DespesaWhereInput
    none?: DespesaWhereInput
  }

  export type DespesaContinuaListRelationFilter = {
    every?: DespesaContinuaWhereInput
    some?: DespesaContinuaWhereInput
    none?: DespesaContinuaWhereInput
  }

  export type AtivoListRelationFilter = {
    every?: AtivoWhereInput
    some?: AtivoWhereInput
    none?: AtivoWhereInput
  }

  export type AtivoContinuoListRelationFilter = {
    every?: AtivoContinuoWhereInput
    some?: AtivoContinuoWhereInput
    none?: AtivoContinuoWhereInput
  }

  export type CategoriaAtivoListRelationFilter = {
    every?: CategoriaAtivoWhereInput
    some?: CategoriaAtivoWhereInput
    none?: CategoriaAtivoWhereInput
  }

  export type CategoriaDespesaListRelationFilter = {
    every?: CategoriaDespesaWhereInput
    some?: CategoriaDespesaWhereInput
    none?: CategoriaDespesaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DespesaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DespesaContinuaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AtivoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AtivoContinuoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaAtivoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaDespesaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CategoriaDespesaRelationFilter = {
    is?: CategoriaDespesaWhereInput
    isNot?: CategoriaDespesaWhereInput
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type DespesaCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    idUsuario?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DespesaContinuaCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaContinuaAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaContinuaMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaContinuaMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type DespesaContinuaSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    idUsuario?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type CategoriaDespesaCountOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaDespesaAvgOrderByAggregateInput = {
    idUsuario?: SortOrder
  }

  export type CategoriaDespesaMaxOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaDespesaMinOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaDespesaSumOrderByAggregateInput = {
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoRelationFilter = {
    is?: CategoriaAtivoWhereInput
    isNot?: CategoriaAtivoWhereInput
  }

  export type AtivoCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoContinuoCountOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoContinuoAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoContinuoMaxOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoContinuoMinOrderByAggregateInput = {
    id?: SortOrder
    data?: SortOrder
    valor?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    anualmente?: SortOrder
    idCategoria?: SortOrder
    idUsuario?: SortOrder
  }

  export type AtivoContinuoSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    mesComeco?: SortOrder
    diaPagamento?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoCountOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoAvgOrderByAggregateInput = {
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoMaxOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoMinOrderByAggregateInput = {
    id?: SortOrder
    cores?: SortOrder
    idUsuario?: SortOrder
  }

  export type CategoriaAtivoSumOrderByAggregateInput = {
    idUsuario?: SortOrder
  }

  export type DespesaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput> | DespesaCreateWithoutUsuarioInput[] | DespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutUsuarioInput | DespesaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DespesaCreateManyUsuarioInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type DespesaContinuaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput> | DespesaContinuaCreateWithoutUsuarioInput[] | DespesaContinuaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutUsuarioInput | DespesaContinuaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DespesaContinuaCreateManyUsuarioInputEnvelope
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
  }

  export type AtivoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput> | AtivoCreateWithoutUsuarioInput[] | AtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutUsuarioInput | AtivoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtivoCreateManyUsuarioInputEnvelope
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
  }

  export type AtivoContinuoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput> | AtivoContinuoCreateWithoutUsuarioInput[] | AtivoContinuoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutUsuarioInput | AtivoContinuoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtivoContinuoCreateManyUsuarioInputEnvelope
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
  }

  export type CategoriaAtivoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput> | CategoriaAtivoCreateWithoutUsuarioInput[] | CategoriaAtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutUsuarioInput | CategoriaAtivoCreateOrConnectWithoutUsuarioInput[]
    createMany?: CategoriaAtivoCreateManyUsuarioInputEnvelope
    connect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
  }

  export type CategoriaDespesaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput> | CategoriaDespesaCreateWithoutUsuarioInput[] | CategoriaDespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutUsuarioInput | CategoriaDespesaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CategoriaDespesaCreateManyUsuarioInputEnvelope
    connect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
  }

  export type DespesaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput> | DespesaCreateWithoutUsuarioInput[] | DespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutUsuarioInput | DespesaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DespesaCreateManyUsuarioInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput> | DespesaContinuaCreateWithoutUsuarioInput[] | DespesaContinuaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutUsuarioInput | DespesaContinuaCreateOrConnectWithoutUsuarioInput[]
    createMany?: DespesaContinuaCreateManyUsuarioInputEnvelope
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
  }

  export type AtivoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput> | AtivoCreateWithoutUsuarioInput[] | AtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutUsuarioInput | AtivoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtivoCreateManyUsuarioInputEnvelope
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
  }

  export type AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput> | AtivoContinuoCreateWithoutUsuarioInput[] | AtivoContinuoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutUsuarioInput | AtivoContinuoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtivoContinuoCreateManyUsuarioInputEnvelope
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
  }

  export type CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput> | CategoriaAtivoCreateWithoutUsuarioInput[] | CategoriaAtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutUsuarioInput | CategoriaAtivoCreateOrConnectWithoutUsuarioInput[]
    createMany?: CategoriaAtivoCreateManyUsuarioInputEnvelope
    connect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
  }

  export type CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput> | CategoriaDespesaCreateWithoutUsuarioInput[] | CategoriaDespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutUsuarioInput | CategoriaDespesaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CategoriaDespesaCreateManyUsuarioInputEnvelope
    connect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type DespesaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput> | DespesaCreateWithoutUsuarioInput[] | DespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutUsuarioInput | DespesaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutUsuarioInput | DespesaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DespesaCreateManyUsuarioInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutUsuarioInput | DespesaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutUsuarioInput | DespesaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type DespesaContinuaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput> | DespesaContinuaCreateWithoutUsuarioInput[] | DespesaContinuaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutUsuarioInput | DespesaContinuaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DespesaContinuaUpsertWithWhereUniqueWithoutUsuarioInput | DespesaContinuaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DespesaContinuaCreateManyUsuarioInputEnvelope
    set?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    disconnect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    delete?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    update?: DespesaContinuaUpdateWithWhereUniqueWithoutUsuarioInput | DespesaContinuaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DespesaContinuaUpdateManyWithWhereWithoutUsuarioInput | DespesaContinuaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
  }

  export type AtivoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput> | AtivoCreateWithoutUsuarioInput[] | AtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutUsuarioInput | AtivoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtivoUpsertWithWhereUniqueWithoutUsuarioInput | AtivoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtivoCreateManyUsuarioInputEnvelope
    set?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    disconnect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    delete?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    update?: AtivoUpdateWithWhereUniqueWithoutUsuarioInput | AtivoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtivoUpdateManyWithWhereWithoutUsuarioInput | AtivoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
  }

  export type AtivoContinuoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput> | AtivoContinuoCreateWithoutUsuarioInput[] | AtivoContinuoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutUsuarioInput | AtivoContinuoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtivoContinuoUpsertWithWhereUniqueWithoutUsuarioInput | AtivoContinuoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtivoContinuoCreateManyUsuarioInputEnvelope
    set?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    disconnect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    delete?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    update?: AtivoContinuoUpdateWithWhereUniqueWithoutUsuarioInput | AtivoContinuoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtivoContinuoUpdateManyWithWhereWithoutUsuarioInput | AtivoContinuoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
  }

  export type CategoriaAtivoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput> | CategoriaAtivoCreateWithoutUsuarioInput[] | CategoriaAtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutUsuarioInput | CategoriaAtivoCreateOrConnectWithoutUsuarioInput[]
    upsert?: CategoriaAtivoUpsertWithWhereUniqueWithoutUsuarioInput | CategoriaAtivoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CategoriaAtivoCreateManyUsuarioInputEnvelope
    set?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    disconnect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    delete?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    connect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    update?: CategoriaAtivoUpdateWithWhereUniqueWithoutUsuarioInput | CategoriaAtivoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CategoriaAtivoUpdateManyWithWhereWithoutUsuarioInput | CategoriaAtivoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CategoriaAtivoScalarWhereInput | CategoriaAtivoScalarWhereInput[]
  }

  export type CategoriaDespesaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput> | CategoriaDespesaCreateWithoutUsuarioInput[] | CategoriaDespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutUsuarioInput | CategoriaDespesaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CategoriaDespesaUpsertWithWhereUniqueWithoutUsuarioInput | CategoriaDespesaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CategoriaDespesaCreateManyUsuarioInputEnvelope
    set?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    disconnect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    delete?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    connect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    update?: CategoriaDespesaUpdateWithWhereUniqueWithoutUsuarioInput | CategoriaDespesaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CategoriaDespesaUpdateManyWithWhereWithoutUsuarioInput | CategoriaDespesaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CategoriaDespesaScalarWhereInput | CategoriaDespesaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DespesaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput> | DespesaCreateWithoutUsuarioInput[] | DespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutUsuarioInput | DespesaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutUsuarioInput | DespesaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DespesaCreateManyUsuarioInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutUsuarioInput | DespesaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutUsuarioInput | DespesaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput> | DespesaContinuaCreateWithoutUsuarioInput[] | DespesaContinuaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutUsuarioInput | DespesaContinuaCreateOrConnectWithoutUsuarioInput[]
    upsert?: DespesaContinuaUpsertWithWhereUniqueWithoutUsuarioInput | DespesaContinuaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DespesaContinuaCreateManyUsuarioInputEnvelope
    set?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    disconnect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    delete?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    update?: DespesaContinuaUpdateWithWhereUniqueWithoutUsuarioInput | DespesaContinuaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DespesaContinuaUpdateManyWithWhereWithoutUsuarioInput | DespesaContinuaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
  }

  export type AtivoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput> | AtivoCreateWithoutUsuarioInput[] | AtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutUsuarioInput | AtivoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtivoUpsertWithWhereUniqueWithoutUsuarioInput | AtivoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtivoCreateManyUsuarioInputEnvelope
    set?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    disconnect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    delete?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    update?: AtivoUpdateWithWhereUniqueWithoutUsuarioInput | AtivoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtivoUpdateManyWithWhereWithoutUsuarioInput | AtivoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
  }

  export type AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput> | AtivoContinuoCreateWithoutUsuarioInput[] | AtivoContinuoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutUsuarioInput | AtivoContinuoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtivoContinuoUpsertWithWhereUniqueWithoutUsuarioInput | AtivoContinuoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtivoContinuoCreateManyUsuarioInputEnvelope
    set?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    disconnect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    delete?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    update?: AtivoContinuoUpdateWithWhereUniqueWithoutUsuarioInput | AtivoContinuoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtivoContinuoUpdateManyWithWhereWithoutUsuarioInput | AtivoContinuoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
  }

  export type CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput> | CategoriaAtivoCreateWithoutUsuarioInput[] | CategoriaAtivoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutUsuarioInput | CategoriaAtivoCreateOrConnectWithoutUsuarioInput[]
    upsert?: CategoriaAtivoUpsertWithWhereUniqueWithoutUsuarioInput | CategoriaAtivoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CategoriaAtivoCreateManyUsuarioInputEnvelope
    set?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    disconnect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    delete?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    connect?: CategoriaAtivoWhereUniqueInput | CategoriaAtivoWhereUniqueInput[]
    update?: CategoriaAtivoUpdateWithWhereUniqueWithoutUsuarioInput | CategoriaAtivoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CategoriaAtivoUpdateManyWithWhereWithoutUsuarioInput | CategoriaAtivoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CategoriaAtivoScalarWhereInput | CategoriaAtivoScalarWhereInput[]
  }

  export type CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput> | CategoriaDespesaCreateWithoutUsuarioInput[] | CategoriaDespesaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutUsuarioInput | CategoriaDespesaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CategoriaDespesaUpsertWithWhereUniqueWithoutUsuarioInput | CategoriaDespesaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CategoriaDespesaCreateManyUsuarioInputEnvelope
    set?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    disconnect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    delete?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    connect?: CategoriaDespesaWhereUniqueInput | CategoriaDespesaWhereUniqueInput[]
    update?: CategoriaDespesaUpdateWithWhereUniqueWithoutUsuarioInput | CategoriaDespesaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CategoriaDespesaUpdateManyWithWhereWithoutUsuarioInput | CategoriaDespesaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CategoriaDespesaScalarWhereInput | CategoriaDespesaScalarWhereInput[]
  }

  export type CategoriaDespesaCreateNestedOneWithoutDespesasInput = {
    create?: XOR<CategoriaDespesaCreateWithoutDespesasInput, CategoriaDespesaUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutDespesasInput
    connect?: CategoriaDespesaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutDespesasInput = {
    create?: XOR<UsuarioCreateWithoutDespesasInput, UsuarioUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDespesasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriaDespesaUpdateOneRequiredWithoutDespesasNestedInput = {
    create?: XOR<CategoriaDespesaCreateWithoutDespesasInput, CategoriaDespesaUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutDespesasInput
    upsert?: CategoriaDespesaUpsertWithoutDespesasInput
    connect?: CategoriaDespesaWhereUniqueInput
    update?: XOR<XOR<CategoriaDespesaUpdateToOneWithWhereWithoutDespesasInput, CategoriaDespesaUpdateWithoutDespesasInput>, CategoriaDespesaUncheckedUpdateWithoutDespesasInput>
  }

  export type UsuarioUpdateOneRequiredWithoutDespesasNestedInput = {
    create?: XOR<UsuarioCreateWithoutDespesasInput, UsuarioUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDespesasInput
    upsert?: UsuarioUpsertWithoutDespesasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDespesasInput, UsuarioUpdateWithoutDespesasInput>, UsuarioUncheckedUpdateWithoutDespesasInput>
  }

  export type CategoriaDespesaCreateNestedOneWithoutDespesasContinuasInput = {
    create?: XOR<CategoriaDespesaCreateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedCreateWithoutDespesasContinuasInput>
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutDespesasContinuasInput
    connect?: CategoriaDespesaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutDespesasContinuasInput = {
    create?: XOR<UsuarioCreateWithoutDespesasContinuasInput, UsuarioUncheckedCreateWithoutDespesasContinuasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDespesasContinuasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CategoriaDespesaUpdateOneRequiredWithoutDespesasContinuasNestedInput = {
    create?: XOR<CategoriaDespesaCreateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedCreateWithoutDespesasContinuasInput>
    connectOrCreate?: CategoriaDespesaCreateOrConnectWithoutDespesasContinuasInput
    upsert?: CategoriaDespesaUpsertWithoutDespesasContinuasInput
    connect?: CategoriaDespesaWhereUniqueInput
    update?: XOR<XOR<CategoriaDespesaUpdateToOneWithWhereWithoutDespesasContinuasInput, CategoriaDespesaUpdateWithoutDespesasContinuasInput>, CategoriaDespesaUncheckedUpdateWithoutDespesasContinuasInput>
  }

  export type UsuarioUpdateOneRequiredWithoutDespesasContinuasNestedInput = {
    create?: XOR<UsuarioCreateWithoutDespesasContinuasInput, UsuarioUncheckedCreateWithoutDespesasContinuasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDespesasContinuasInput
    upsert?: UsuarioUpsertWithoutDespesasContinuasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDespesasContinuasInput, UsuarioUpdateWithoutDespesasContinuasInput>, UsuarioUncheckedUpdateWithoutDespesasContinuasInput>
  }

  export type UsuarioCreateNestedOneWithoutCategoriasDespesasInput = {
    create?: XOR<UsuarioCreateWithoutCategoriasDespesasInput, UsuarioUncheckedCreateWithoutCategoriasDespesasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCategoriasDespesasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DespesaContinuaCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput> | DespesaContinuaCreateWithoutCategoriaInput[] | DespesaContinuaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutCategoriaInput | DespesaContinuaCreateOrConnectWithoutCategoriaInput[]
    createMany?: DespesaContinuaCreateManyCategoriaInputEnvelope
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
  }

  export type DespesaCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput> | DespesaCreateWithoutCategoriaInput[] | DespesaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCategoriaInput | DespesaCreateOrConnectWithoutCategoriaInput[]
    createMany?: DespesaCreateManyCategoriaInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type DespesaContinuaUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput> | DespesaContinuaCreateWithoutCategoriaInput[] | DespesaContinuaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutCategoriaInput | DespesaContinuaCreateOrConnectWithoutCategoriaInput[]
    createMany?: DespesaContinuaCreateManyCategoriaInputEnvelope
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
  }

  export type DespesaUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput> | DespesaCreateWithoutCategoriaInput[] | DespesaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCategoriaInput | DespesaCreateOrConnectWithoutCategoriaInput[]
    createMany?: DespesaCreateManyCategoriaInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutCategoriasDespesasNestedInput = {
    create?: XOR<UsuarioCreateWithoutCategoriasDespesasInput, UsuarioUncheckedCreateWithoutCategoriasDespesasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCategoriasDespesasInput
    upsert?: UsuarioUpsertWithoutCategoriasDespesasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCategoriasDespesasInput, UsuarioUpdateWithoutCategoriasDespesasInput>, UsuarioUncheckedUpdateWithoutCategoriasDespesasInput>
  }

  export type DespesaContinuaUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput> | DespesaContinuaCreateWithoutCategoriaInput[] | DespesaContinuaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutCategoriaInput | DespesaContinuaCreateOrConnectWithoutCategoriaInput[]
    upsert?: DespesaContinuaUpsertWithWhereUniqueWithoutCategoriaInput | DespesaContinuaUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: DespesaContinuaCreateManyCategoriaInputEnvelope
    set?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    disconnect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    delete?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    update?: DespesaContinuaUpdateWithWhereUniqueWithoutCategoriaInput | DespesaContinuaUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: DespesaContinuaUpdateManyWithWhereWithoutCategoriaInput | DespesaContinuaUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
  }

  export type DespesaUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput> | DespesaCreateWithoutCategoriaInput[] | DespesaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCategoriaInput | DespesaCreateOrConnectWithoutCategoriaInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutCategoriaInput | DespesaUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: DespesaCreateManyCategoriaInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutCategoriaInput | DespesaUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutCategoriaInput | DespesaUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type DespesaContinuaUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput> | DespesaContinuaCreateWithoutCategoriaInput[] | DespesaContinuaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaContinuaCreateOrConnectWithoutCategoriaInput | DespesaContinuaCreateOrConnectWithoutCategoriaInput[]
    upsert?: DespesaContinuaUpsertWithWhereUniqueWithoutCategoriaInput | DespesaContinuaUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: DespesaContinuaCreateManyCategoriaInputEnvelope
    set?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    disconnect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    delete?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    connect?: DespesaContinuaWhereUniqueInput | DespesaContinuaWhereUniqueInput[]
    update?: DespesaContinuaUpdateWithWhereUniqueWithoutCategoriaInput | DespesaContinuaUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: DespesaContinuaUpdateManyWithWhereWithoutCategoriaInput | DespesaContinuaUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
  }

  export type DespesaUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput> | DespesaCreateWithoutCategoriaInput[] | DespesaUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCategoriaInput | DespesaCreateOrConnectWithoutCategoriaInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutCategoriaInput | DespesaUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: DespesaCreateManyCategoriaInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutCategoriaInput | DespesaUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutCategoriaInput | DespesaUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type CategoriaAtivoCreateNestedOneWithoutAtivosInput = {
    create?: XOR<CategoriaAtivoCreateWithoutAtivosInput, CategoriaAtivoUncheckedCreateWithoutAtivosInput>
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutAtivosInput
    connect?: CategoriaAtivoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutAtivosInput = {
    create?: XOR<UsuarioCreateWithoutAtivosInput, UsuarioUncheckedCreateWithoutAtivosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtivosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CategoriaAtivoUpdateOneRequiredWithoutAtivosNestedInput = {
    create?: XOR<CategoriaAtivoCreateWithoutAtivosInput, CategoriaAtivoUncheckedCreateWithoutAtivosInput>
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutAtivosInput
    upsert?: CategoriaAtivoUpsertWithoutAtivosInput
    connect?: CategoriaAtivoWhereUniqueInput
    update?: XOR<XOR<CategoriaAtivoUpdateToOneWithWhereWithoutAtivosInput, CategoriaAtivoUpdateWithoutAtivosInput>, CategoriaAtivoUncheckedUpdateWithoutAtivosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutAtivosNestedInput = {
    create?: XOR<UsuarioCreateWithoutAtivosInput, UsuarioUncheckedCreateWithoutAtivosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtivosInput
    upsert?: UsuarioUpsertWithoutAtivosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAtivosInput, UsuarioUpdateWithoutAtivosInput>, UsuarioUncheckedUpdateWithoutAtivosInput>
  }

  export type CategoriaAtivoCreateNestedOneWithoutAtivosContinuosInput = {
    create?: XOR<CategoriaAtivoCreateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedCreateWithoutAtivosContinuosInput>
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutAtivosContinuosInput
    connect?: CategoriaAtivoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutAtivosContinuosInput = {
    create?: XOR<UsuarioCreateWithoutAtivosContinuosInput, UsuarioUncheckedCreateWithoutAtivosContinuosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtivosContinuosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CategoriaAtivoUpdateOneRequiredWithoutAtivosContinuosNestedInput = {
    create?: XOR<CategoriaAtivoCreateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedCreateWithoutAtivosContinuosInput>
    connectOrCreate?: CategoriaAtivoCreateOrConnectWithoutAtivosContinuosInput
    upsert?: CategoriaAtivoUpsertWithoutAtivosContinuosInput
    connect?: CategoriaAtivoWhereUniqueInput
    update?: XOR<XOR<CategoriaAtivoUpdateToOneWithWhereWithoutAtivosContinuosInput, CategoriaAtivoUpdateWithoutAtivosContinuosInput>, CategoriaAtivoUncheckedUpdateWithoutAtivosContinuosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutAtivosContinuosNestedInput = {
    create?: XOR<UsuarioCreateWithoutAtivosContinuosInput, UsuarioUncheckedCreateWithoutAtivosContinuosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtivosContinuosInput
    upsert?: UsuarioUpsertWithoutAtivosContinuosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAtivosContinuosInput, UsuarioUpdateWithoutAtivosContinuosInput>, UsuarioUncheckedUpdateWithoutAtivosContinuosInput>
  }

  export type UsuarioCreateNestedOneWithoutCategoriasAtivosInput = {
    create?: XOR<UsuarioCreateWithoutCategoriasAtivosInput, UsuarioUncheckedCreateWithoutCategoriasAtivosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCategoriasAtivosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type AtivoContinuoCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput> | AtivoContinuoCreateWithoutCategoriaInput[] | AtivoContinuoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutCategoriaInput | AtivoContinuoCreateOrConnectWithoutCategoriaInput[]
    createMany?: AtivoContinuoCreateManyCategoriaInputEnvelope
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
  }

  export type AtivoCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput> | AtivoCreateWithoutCategoriaInput[] | AtivoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutCategoriaInput | AtivoCreateOrConnectWithoutCategoriaInput[]
    createMany?: AtivoCreateManyCategoriaInputEnvelope
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
  }

  export type AtivoContinuoUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput> | AtivoContinuoCreateWithoutCategoriaInput[] | AtivoContinuoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutCategoriaInput | AtivoContinuoCreateOrConnectWithoutCategoriaInput[]
    createMany?: AtivoContinuoCreateManyCategoriaInputEnvelope
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
  }

  export type AtivoUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput> | AtivoCreateWithoutCategoriaInput[] | AtivoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutCategoriaInput | AtivoCreateOrConnectWithoutCategoriaInput[]
    createMany?: AtivoCreateManyCategoriaInputEnvelope
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutCategoriasAtivosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCategoriasAtivosInput, UsuarioUncheckedCreateWithoutCategoriasAtivosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCategoriasAtivosInput
    upsert?: UsuarioUpsertWithoutCategoriasAtivosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCategoriasAtivosInput, UsuarioUpdateWithoutCategoriasAtivosInput>, UsuarioUncheckedUpdateWithoutCategoriasAtivosInput>
  }

  export type AtivoContinuoUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput> | AtivoContinuoCreateWithoutCategoriaInput[] | AtivoContinuoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutCategoriaInput | AtivoContinuoCreateOrConnectWithoutCategoriaInput[]
    upsert?: AtivoContinuoUpsertWithWhereUniqueWithoutCategoriaInput | AtivoContinuoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: AtivoContinuoCreateManyCategoriaInputEnvelope
    set?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    disconnect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    delete?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    update?: AtivoContinuoUpdateWithWhereUniqueWithoutCategoriaInput | AtivoContinuoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: AtivoContinuoUpdateManyWithWhereWithoutCategoriaInput | AtivoContinuoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
  }

  export type AtivoUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput> | AtivoCreateWithoutCategoriaInput[] | AtivoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutCategoriaInput | AtivoCreateOrConnectWithoutCategoriaInput[]
    upsert?: AtivoUpsertWithWhereUniqueWithoutCategoriaInput | AtivoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: AtivoCreateManyCategoriaInputEnvelope
    set?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    disconnect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    delete?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    update?: AtivoUpdateWithWhereUniqueWithoutCategoriaInput | AtivoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: AtivoUpdateManyWithWhereWithoutCategoriaInput | AtivoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
  }

  export type AtivoContinuoUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput> | AtivoContinuoCreateWithoutCategoriaInput[] | AtivoContinuoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoContinuoCreateOrConnectWithoutCategoriaInput | AtivoContinuoCreateOrConnectWithoutCategoriaInput[]
    upsert?: AtivoContinuoUpsertWithWhereUniqueWithoutCategoriaInput | AtivoContinuoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: AtivoContinuoCreateManyCategoriaInputEnvelope
    set?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    disconnect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    delete?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    connect?: AtivoContinuoWhereUniqueInput | AtivoContinuoWhereUniqueInput[]
    update?: AtivoContinuoUpdateWithWhereUniqueWithoutCategoriaInput | AtivoContinuoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: AtivoContinuoUpdateManyWithWhereWithoutCategoriaInput | AtivoContinuoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
  }

  export type AtivoUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput> | AtivoCreateWithoutCategoriaInput[] | AtivoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: AtivoCreateOrConnectWithoutCategoriaInput | AtivoCreateOrConnectWithoutCategoriaInput[]
    upsert?: AtivoUpsertWithWhereUniqueWithoutCategoriaInput | AtivoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: AtivoCreateManyCategoriaInputEnvelope
    set?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    disconnect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    delete?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    connect?: AtivoWhereUniqueInput | AtivoWhereUniqueInput[]
    update?: AtivoUpdateWithWhereUniqueWithoutCategoriaInput | AtivoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: AtivoUpdateManyWithWhereWithoutCategoriaInput | AtivoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DespesaCreateWithoutUsuarioInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    categoria: CategoriaDespesaCreateNestedOneWithoutDespesasInput
  }

  export type DespesaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
  }

  export type DespesaCreateOrConnectWithoutUsuarioInput = {
    where: DespesaWhereUniqueInput
    create: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput>
  }

  export type DespesaCreateManyUsuarioInputEnvelope = {
    data: DespesaCreateManyUsuarioInput | DespesaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DespesaContinuaCreateWithoutUsuarioInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    categoria: CategoriaDespesaCreateNestedOneWithoutDespesasContinuasInput
  }

  export type DespesaContinuaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
  }

  export type DespesaContinuaCreateOrConnectWithoutUsuarioInput = {
    where: DespesaContinuaWhereUniqueInput
    create: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput>
  }

  export type DespesaContinuaCreateManyUsuarioInputEnvelope = {
    data: DespesaContinuaCreateManyUsuarioInput | DespesaContinuaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type AtivoCreateWithoutUsuarioInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    categoria: CategoriaAtivoCreateNestedOneWithoutAtivosInput
  }

  export type AtivoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
  }

  export type AtivoCreateOrConnectWithoutUsuarioInput = {
    where: AtivoWhereUniqueInput
    create: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtivoCreateManyUsuarioInputEnvelope = {
    data: AtivoCreateManyUsuarioInput | AtivoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type AtivoContinuoCreateWithoutUsuarioInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    categoria: CategoriaAtivoCreateNestedOneWithoutAtivosContinuosInput
  }

  export type AtivoContinuoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
  }

  export type AtivoContinuoCreateOrConnectWithoutUsuarioInput = {
    where: AtivoContinuoWhereUniqueInput
    create: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtivoContinuoCreateManyUsuarioInputEnvelope = {
    data: AtivoContinuoCreateManyUsuarioInput | AtivoContinuoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaAtivoCreateWithoutUsuarioInput = {
    id: string
    cores: string
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutCategoriaInput
    ativos?: AtivoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoUncheckedCreateWithoutUsuarioInput = {
    id: string
    cores: string
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutCategoriaInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoCreateOrConnectWithoutUsuarioInput = {
    where: CategoriaAtivoWhereUniqueInput
    create: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput>
  }

  export type CategoriaAtivoCreateManyUsuarioInputEnvelope = {
    data: CategoriaAtivoCreateManyUsuarioInput | CategoriaAtivoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaDespesaCreateWithoutUsuarioInput = {
    id: string
    cores: string
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutCategoriaInput
    despesas?: DespesaCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaUncheckedCreateWithoutUsuarioInput = {
    id: string
    cores: string
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutCategoriaInput
    despesas?: DespesaUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaCreateOrConnectWithoutUsuarioInput = {
    where: CategoriaDespesaWhereUniqueInput
    create: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput>
  }

  export type CategoriaDespesaCreateManyUsuarioInputEnvelope = {
    data: CategoriaDespesaCreateManyUsuarioInput | CategoriaDespesaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DespesaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DespesaWhereUniqueInput
    update: XOR<DespesaUpdateWithoutUsuarioInput, DespesaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DespesaCreateWithoutUsuarioInput, DespesaUncheckedCreateWithoutUsuarioInput>
  }

  export type DespesaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DespesaWhereUniqueInput
    data: XOR<DespesaUpdateWithoutUsuarioInput, DespesaUncheckedUpdateWithoutUsuarioInput>
  }

  export type DespesaUpdateManyWithWhereWithoutUsuarioInput = {
    where: DespesaScalarWhereInput
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DespesaScalarWhereInput = {
    AND?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
    OR?: DespesaScalarWhereInput[]
    NOT?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
    id?: IntFilter<"Despesa"> | number
    data?: DateTimeFilter<"Despesa"> | Date | string
    valor?: FloatFilter<"Despesa"> | number
    nome?: StringFilter<"Despesa"> | string
    descricao?: StringFilter<"Despesa"> | string
    idCategoria?: StringFilter<"Despesa"> | string
    idUsuario?: IntFilter<"Despesa"> | number
  }

  export type DespesaContinuaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DespesaContinuaWhereUniqueInput
    update: XOR<DespesaContinuaUpdateWithoutUsuarioInput, DespesaContinuaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DespesaContinuaCreateWithoutUsuarioInput, DespesaContinuaUncheckedCreateWithoutUsuarioInput>
  }

  export type DespesaContinuaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DespesaContinuaWhereUniqueInput
    data: XOR<DespesaContinuaUpdateWithoutUsuarioInput, DespesaContinuaUncheckedUpdateWithoutUsuarioInput>
  }

  export type DespesaContinuaUpdateManyWithWhereWithoutUsuarioInput = {
    where: DespesaContinuaScalarWhereInput
    data: XOR<DespesaContinuaUpdateManyMutationInput, DespesaContinuaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DespesaContinuaScalarWhereInput = {
    AND?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
    OR?: DespesaContinuaScalarWhereInput[]
    NOT?: DespesaContinuaScalarWhereInput | DespesaContinuaScalarWhereInput[]
    id?: IntFilter<"DespesaContinua"> | number
    data?: DateTimeFilter<"DespesaContinua"> | Date | string
    valor?: FloatFilter<"DespesaContinua"> | number
    nome?: StringFilter<"DespesaContinua"> | string
    descricao?: StringFilter<"DespesaContinua"> | string
    mesComeco?: IntFilter<"DespesaContinua"> | number
    diaPagamento?: IntFilter<"DespesaContinua"> | number
    anualmente?: BoolFilter<"DespesaContinua"> | boolean
    idCategoria?: StringFilter<"DespesaContinua"> | string
    idUsuario?: IntFilter<"DespesaContinua"> | number
  }

  export type AtivoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: AtivoWhereUniqueInput
    update: XOR<AtivoUpdateWithoutUsuarioInput, AtivoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<AtivoCreateWithoutUsuarioInput, AtivoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtivoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: AtivoWhereUniqueInput
    data: XOR<AtivoUpdateWithoutUsuarioInput, AtivoUncheckedUpdateWithoutUsuarioInput>
  }

  export type AtivoUpdateManyWithWhereWithoutUsuarioInput = {
    where: AtivoScalarWhereInput
    data: XOR<AtivoUpdateManyMutationInput, AtivoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type AtivoScalarWhereInput = {
    AND?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
    OR?: AtivoScalarWhereInput[]
    NOT?: AtivoScalarWhereInput | AtivoScalarWhereInput[]
    id?: IntFilter<"Ativo"> | number
    data?: DateTimeFilter<"Ativo"> | Date | string
    valor?: FloatFilter<"Ativo"> | number
    nome?: StringFilter<"Ativo"> | string
    descricao?: StringFilter<"Ativo"> | string
    idCategoria?: StringFilter<"Ativo"> | string
    idUsuario?: IntFilter<"Ativo"> | number
  }

  export type AtivoContinuoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: AtivoContinuoWhereUniqueInput
    update: XOR<AtivoContinuoUpdateWithoutUsuarioInput, AtivoContinuoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<AtivoContinuoCreateWithoutUsuarioInput, AtivoContinuoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtivoContinuoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: AtivoContinuoWhereUniqueInput
    data: XOR<AtivoContinuoUpdateWithoutUsuarioInput, AtivoContinuoUncheckedUpdateWithoutUsuarioInput>
  }

  export type AtivoContinuoUpdateManyWithWhereWithoutUsuarioInput = {
    where: AtivoContinuoScalarWhereInput
    data: XOR<AtivoContinuoUpdateManyMutationInput, AtivoContinuoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type AtivoContinuoScalarWhereInput = {
    AND?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
    OR?: AtivoContinuoScalarWhereInput[]
    NOT?: AtivoContinuoScalarWhereInput | AtivoContinuoScalarWhereInput[]
    id?: IntFilter<"AtivoContinuo"> | number
    data?: DateTimeFilter<"AtivoContinuo"> | Date | string
    valor?: FloatFilter<"AtivoContinuo"> | number
    nome?: StringFilter<"AtivoContinuo"> | string
    descricao?: StringFilter<"AtivoContinuo"> | string
    mesComeco?: IntFilter<"AtivoContinuo"> | number
    diaPagamento?: IntFilter<"AtivoContinuo"> | number
    anualmente?: BoolFilter<"AtivoContinuo"> | boolean
    idCategoria?: StringFilter<"AtivoContinuo"> | string
    idUsuario?: IntFilter<"AtivoContinuo"> | number
  }

  export type CategoriaAtivoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CategoriaAtivoWhereUniqueInput
    update: XOR<CategoriaAtivoUpdateWithoutUsuarioInput, CategoriaAtivoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CategoriaAtivoCreateWithoutUsuarioInput, CategoriaAtivoUncheckedCreateWithoutUsuarioInput>
  }

  export type CategoriaAtivoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CategoriaAtivoWhereUniqueInput
    data: XOR<CategoriaAtivoUpdateWithoutUsuarioInput, CategoriaAtivoUncheckedUpdateWithoutUsuarioInput>
  }

  export type CategoriaAtivoUpdateManyWithWhereWithoutUsuarioInput = {
    where: CategoriaAtivoScalarWhereInput
    data: XOR<CategoriaAtivoUpdateManyMutationInput, CategoriaAtivoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CategoriaAtivoScalarWhereInput = {
    AND?: CategoriaAtivoScalarWhereInput | CategoriaAtivoScalarWhereInput[]
    OR?: CategoriaAtivoScalarWhereInput[]
    NOT?: CategoriaAtivoScalarWhereInput | CategoriaAtivoScalarWhereInput[]
    id?: StringFilter<"CategoriaAtivo"> | string
    cores?: StringFilter<"CategoriaAtivo"> | string
    idUsuario?: IntFilter<"CategoriaAtivo"> | number
  }

  export type CategoriaDespesaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CategoriaDespesaWhereUniqueInput
    update: XOR<CategoriaDespesaUpdateWithoutUsuarioInput, CategoriaDespesaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CategoriaDespesaCreateWithoutUsuarioInput, CategoriaDespesaUncheckedCreateWithoutUsuarioInput>
  }

  export type CategoriaDespesaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CategoriaDespesaWhereUniqueInput
    data: XOR<CategoriaDespesaUpdateWithoutUsuarioInput, CategoriaDespesaUncheckedUpdateWithoutUsuarioInput>
  }

  export type CategoriaDespesaUpdateManyWithWhereWithoutUsuarioInput = {
    where: CategoriaDespesaScalarWhereInput
    data: XOR<CategoriaDespesaUpdateManyMutationInput, CategoriaDespesaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CategoriaDespesaScalarWhereInput = {
    AND?: CategoriaDespesaScalarWhereInput | CategoriaDespesaScalarWhereInput[]
    OR?: CategoriaDespesaScalarWhereInput[]
    NOT?: CategoriaDespesaScalarWhereInput | CategoriaDespesaScalarWhereInput[]
    id?: StringFilter<"CategoriaDespesa"> | string
    cores?: StringFilter<"CategoriaDespesa"> | string
    idUsuario?: IntFilter<"CategoriaDespesa"> | number
  }

  export type CategoriaDespesaCreateWithoutDespesasInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasDespesasInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaUncheckedCreateWithoutDespesasInput = {
    id: string
    cores: string
    idUsuario: number
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaCreateOrConnectWithoutDespesasInput = {
    where: CategoriaDespesaWhereUniqueInput
    create: XOR<CategoriaDespesaCreateWithoutDespesasInput, CategoriaDespesaUncheckedCreateWithoutDespesasInput>
  }

  export type UsuarioCreateWithoutDespesasInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDespesasInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDespesasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDespesasInput, UsuarioUncheckedCreateWithoutDespesasInput>
  }

  export type CategoriaDespesaUpsertWithoutDespesasInput = {
    update: XOR<CategoriaDespesaUpdateWithoutDespesasInput, CategoriaDespesaUncheckedUpdateWithoutDespesasInput>
    create: XOR<CategoriaDespesaCreateWithoutDespesasInput, CategoriaDespesaUncheckedCreateWithoutDespesasInput>
    where?: CategoriaDespesaWhereInput
  }

  export type CategoriaDespesaUpdateToOneWithWhereWithoutDespesasInput = {
    where?: CategoriaDespesaWhereInput
    data: XOR<CategoriaDespesaUpdateWithoutDespesasInput, CategoriaDespesaUncheckedUpdateWithoutDespesasInput>
  }

  export type CategoriaDespesaUpdateWithoutDespesasInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasDespesasNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaUncheckedUpdateWithoutDespesasInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type UsuarioUpsertWithoutDespesasInput = {
    update: XOR<UsuarioUpdateWithoutDespesasInput, UsuarioUncheckedUpdateWithoutDespesasInput>
    create: XOR<UsuarioCreateWithoutDespesasInput, UsuarioUncheckedCreateWithoutDespesasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDespesasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDespesasInput, UsuarioUncheckedUpdateWithoutDespesasInput>
  }

  export type UsuarioUpdateWithoutDespesasInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDespesasInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CategoriaDespesaCreateWithoutDespesasContinuasInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasDespesasInput
    despesas?: DespesaCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaUncheckedCreateWithoutDespesasContinuasInput = {
    id: string
    cores: string
    idUsuario: number
    despesas?: DespesaUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaDespesaCreateOrConnectWithoutDespesasContinuasInput = {
    where: CategoriaDespesaWhereUniqueInput
    create: XOR<CategoriaDespesaCreateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedCreateWithoutDespesasContinuasInput>
  }

  export type UsuarioCreateWithoutDespesasContinuasInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDespesasContinuasInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDespesasContinuasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDespesasContinuasInput, UsuarioUncheckedCreateWithoutDespesasContinuasInput>
  }

  export type CategoriaDespesaUpsertWithoutDespesasContinuasInput = {
    update: XOR<CategoriaDespesaUpdateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedUpdateWithoutDespesasContinuasInput>
    create: XOR<CategoriaDespesaCreateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedCreateWithoutDespesasContinuasInput>
    where?: CategoriaDespesaWhereInput
  }

  export type CategoriaDespesaUpdateToOneWithWhereWithoutDespesasContinuasInput = {
    where?: CategoriaDespesaWhereInput
    data: XOR<CategoriaDespesaUpdateWithoutDespesasContinuasInput, CategoriaDespesaUncheckedUpdateWithoutDespesasContinuasInput>
  }

  export type CategoriaDespesaUpdateWithoutDespesasContinuasInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasDespesasNestedInput
    despesas?: DespesaUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaUncheckedUpdateWithoutDespesasContinuasInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    despesas?: DespesaUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type UsuarioUpsertWithoutDespesasContinuasInput = {
    update: XOR<UsuarioUpdateWithoutDespesasContinuasInput, UsuarioUncheckedUpdateWithoutDespesasContinuasInput>
    create: XOR<UsuarioCreateWithoutDespesasContinuasInput, UsuarioUncheckedCreateWithoutDespesasContinuasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDespesasContinuasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDespesasContinuasInput, UsuarioUncheckedUpdateWithoutDespesasContinuasInput>
  }

  export type UsuarioUpdateWithoutDespesasContinuasInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDespesasContinuasInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutCategoriasDespesasInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCategoriasDespesasInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCategoriasDespesasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCategoriasDespesasInput, UsuarioUncheckedCreateWithoutCategoriasDespesasInput>
  }

  export type DespesaContinuaCreateWithoutCategoriaInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    usuario: UsuarioCreateNestedOneWithoutDespesasContinuasInput
  }

  export type DespesaContinuaUncheckedCreateWithoutCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idUsuario: number
  }

  export type DespesaContinuaCreateOrConnectWithoutCategoriaInput = {
    where: DespesaContinuaWhereUniqueInput
    create: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput>
  }

  export type DespesaContinuaCreateManyCategoriaInputEnvelope = {
    data: DespesaContinuaCreateManyCategoriaInput | DespesaContinuaCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type DespesaCreateWithoutCategoriaInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    usuario: UsuarioCreateNestedOneWithoutDespesasInput
  }

  export type DespesaUncheckedCreateWithoutCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idUsuario: number
  }

  export type DespesaCreateOrConnectWithoutCategoriaInput = {
    where: DespesaWhereUniqueInput
    create: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput>
  }

  export type DespesaCreateManyCategoriaInputEnvelope = {
    data: DespesaCreateManyCategoriaInput | DespesaCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutCategoriasDespesasInput = {
    update: XOR<UsuarioUpdateWithoutCategoriasDespesasInput, UsuarioUncheckedUpdateWithoutCategoriasDespesasInput>
    create: XOR<UsuarioCreateWithoutCategoriasDespesasInput, UsuarioUncheckedCreateWithoutCategoriasDespesasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCategoriasDespesasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCategoriasDespesasInput, UsuarioUncheckedUpdateWithoutCategoriasDespesasInput>
  }

  export type UsuarioUpdateWithoutCategoriasDespesasInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCategoriasDespesasInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DespesaContinuaUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: DespesaContinuaWhereUniqueInput
    update: XOR<DespesaContinuaUpdateWithoutCategoriaInput, DespesaContinuaUncheckedUpdateWithoutCategoriaInput>
    create: XOR<DespesaContinuaCreateWithoutCategoriaInput, DespesaContinuaUncheckedCreateWithoutCategoriaInput>
  }

  export type DespesaContinuaUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: DespesaContinuaWhereUniqueInput
    data: XOR<DespesaContinuaUpdateWithoutCategoriaInput, DespesaContinuaUncheckedUpdateWithoutCategoriaInput>
  }

  export type DespesaContinuaUpdateManyWithWhereWithoutCategoriaInput = {
    where: DespesaContinuaScalarWhereInput
    data: XOR<DespesaContinuaUpdateManyMutationInput, DespesaContinuaUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type DespesaUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: DespesaWhereUniqueInput
    update: XOR<DespesaUpdateWithoutCategoriaInput, DespesaUncheckedUpdateWithoutCategoriaInput>
    create: XOR<DespesaCreateWithoutCategoriaInput, DespesaUncheckedCreateWithoutCategoriaInput>
  }

  export type DespesaUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: DespesaWhereUniqueInput
    data: XOR<DespesaUpdateWithoutCategoriaInput, DespesaUncheckedUpdateWithoutCategoriaInput>
  }

  export type DespesaUpdateManyWithWhereWithoutCategoriaInput = {
    where: DespesaScalarWhereInput
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type CategoriaAtivoCreateWithoutAtivosInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasAtivosInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoUncheckedCreateWithoutAtivosInput = {
    id: string
    cores: string
    idUsuario: number
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoCreateOrConnectWithoutAtivosInput = {
    where: CategoriaAtivoWhereUniqueInput
    create: XOR<CategoriaAtivoCreateWithoutAtivosInput, CategoriaAtivoUncheckedCreateWithoutAtivosInput>
  }

  export type UsuarioCreateWithoutAtivosInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutAtivosInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutAtivosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAtivosInput, UsuarioUncheckedCreateWithoutAtivosInput>
  }

  export type CategoriaAtivoUpsertWithoutAtivosInput = {
    update: XOR<CategoriaAtivoUpdateWithoutAtivosInput, CategoriaAtivoUncheckedUpdateWithoutAtivosInput>
    create: XOR<CategoriaAtivoCreateWithoutAtivosInput, CategoriaAtivoUncheckedCreateWithoutAtivosInput>
    where?: CategoriaAtivoWhereInput
  }

  export type CategoriaAtivoUpdateToOneWithWhereWithoutAtivosInput = {
    where?: CategoriaAtivoWhereInput
    data: XOR<CategoriaAtivoUpdateWithoutAtivosInput, CategoriaAtivoUncheckedUpdateWithoutAtivosInput>
  }

  export type CategoriaAtivoUpdateWithoutAtivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasAtivosNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoUncheckedUpdateWithoutAtivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type UsuarioUpsertWithoutAtivosInput = {
    update: XOR<UsuarioUpdateWithoutAtivosInput, UsuarioUncheckedUpdateWithoutAtivosInput>
    create: XOR<UsuarioCreateWithoutAtivosInput, UsuarioUncheckedCreateWithoutAtivosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAtivosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAtivosInput, UsuarioUncheckedUpdateWithoutAtivosInput>
  }

  export type UsuarioUpdateWithoutAtivosInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAtivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CategoriaAtivoCreateWithoutAtivosContinuosInput = {
    id: string
    cores: string
    usuario: UsuarioCreateNestedOneWithoutCategoriasAtivosInput
    ativos?: AtivoCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoUncheckedCreateWithoutAtivosContinuosInput = {
    id: string
    cores: string
    idUsuario: number
    ativos?: AtivoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaAtivoCreateOrConnectWithoutAtivosContinuosInput = {
    where: CategoriaAtivoWhereUniqueInput
    create: XOR<CategoriaAtivoCreateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedCreateWithoutAtivosContinuosInput>
  }

  export type UsuarioCreateWithoutAtivosContinuosInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutAtivosContinuosInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasAtivos?: CategoriaAtivoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutAtivosContinuosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAtivosContinuosInput, UsuarioUncheckedCreateWithoutAtivosContinuosInput>
  }

  export type CategoriaAtivoUpsertWithoutAtivosContinuosInput = {
    update: XOR<CategoriaAtivoUpdateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedUpdateWithoutAtivosContinuosInput>
    create: XOR<CategoriaAtivoCreateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedCreateWithoutAtivosContinuosInput>
    where?: CategoriaAtivoWhereInput
  }

  export type CategoriaAtivoUpdateToOneWithWhereWithoutAtivosContinuosInput = {
    where?: CategoriaAtivoWhereInput
    data: XOR<CategoriaAtivoUpdateWithoutAtivosContinuosInput, CategoriaAtivoUncheckedUpdateWithoutAtivosContinuosInput>
  }

  export type CategoriaAtivoUpdateWithoutAtivosContinuosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutCategoriasAtivosNestedInput
    ativos?: AtivoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoUncheckedUpdateWithoutAtivosContinuosInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
    ativos?: AtivoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type UsuarioUpsertWithoutAtivosContinuosInput = {
    update: XOR<UsuarioUpdateWithoutAtivosContinuosInput, UsuarioUncheckedUpdateWithoutAtivosContinuosInput>
    create: XOR<UsuarioCreateWithoutAtivosContinuosInput, UsuarioUncheckedCreateWithoutAtivosContinuosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAtivosContinuosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAtivosContinuosInput, UsuarioUncheckedUpdateWithoutAtivosContinuosInput>
  }

  export type UsuarioUpdateWithoutAtivosContinuosInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAtivosContinuosInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasAtivos?: CategoriaAtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutCategoriasAtivosInput = {
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCategoriasAtivosInput = {
    id?: number
    username: string
    nome: string
    sobrenome: string
    email: string
    senha: string
    foto?: Buffer | null
    despesas?: DespesaUncheckedCreateNestedManyWithoutUsuarioInput
    despesasContinuas?: DespesaContinuaUncheckedCreateNestedManyWithoutUsuarioInput
    ativos?: AtivoUncheckedCreateNestedManyWithoutUsuarioInput
    ativosContinuos?: AtivoContinuoUncheckedCreateNestedManyWithoutUsuarioInput
    categoriasDespesas?: CategoriaDespesaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCategoriasAtivosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCategoriasAtivosInput, UsuarioUncheckedCreateWithoutCategoriasAtivosInput>
  }

  export type AtivoContinuoCreateWithoutCategoriaInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    usuario: UsuarioCreateNestedOneWithoutAtivosContinuosInput
  }

  export type AtivoContinuoUncheckedCreateWithoutCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idUsuario: number
  }

  export type AtivoContinuoCreateOrConnectWithoutCategoriaInput = {
    where: AtivoContinuoWhereUniqueInput
    create: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput>
  }

  export type AtivoContinuoCreateManyCategoriaInputEnvelope = {
    data: AtivoContinuoCreateManyCategoriaInput | AtivoContinuoCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type AtivoCreateWithoutCategoriaInput = {
    data: Date | string
    valor: number
    nome: string
    descricao: string
    usuario: UsuarioCreateNestedOneWithoutAtivosInput
  }

  export type AtivoUncheckedCreateWithoutCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idUsuario: number
  }

  export type AtivoCreateOrConnectWithoutCategoriaInput = {
    where: AtivoWhereUniqueInput
    create: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput>
  }

  export type AtivoCreateManyCategoriaInputEnvelope = {
    data: AtivoCreateManyCategoriaInput | AtivoCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutCategoriasAtivosInput = {
    update: XOR<UsuarioUpdateWithoutCategoriasAtivosInput, UsuarioUncheckedUpdateWithoutCategoriasAtivosInput>
    create: XOR<UsuarioCreateWithoutCategoriasAtivosInput, UsuarioUncheckedCreateWithoutCategoriasAtivosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCategoriasAtivosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCategoriasAtivosInput, UsuarioUncheckedUpdateWithoutCategoriasAtivosInput>
  }

  export type UsuarioUpdateWithoutCategoriasAtivosInput = {
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCategoriasAtivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    despesas?: DespesaUncheckedUpdateManyWithoutUsuarioNestedInput
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutUsuarioNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutUsuarioNestedInput
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutUsuarioNestedInput
    categoriasDespesas?: CategoriaDespesaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type AtivoContinuoUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: AtivoContinuoWhereUniqueInput
    update: XOR<AtivoContinuoUpdateWithoutCategoriaInput, AtivoContinuoUncheckedUpdateWithoutCategoriaInput>
    create: XOR<AtivoContinuoCreateWithoutCategoriaInput, AtivoContinuoUncheckedCreateWithoutCategoriaInput>
  }

  export type AtivoContinuoUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: AtivoContinuoWhereUniqueInput
    data: XOR<AtivoContinuoUpdateWithoutCategoriaInput, AtivoContinuoUncheckedUpdateWithoutCategoriaInput>
  }

  export type AtivoContinuoUpdateManyWithWhereWithoutCategoriaInput = {
    where: AtivoContinuoScalarWhereInput
    data: XOR<AtivoContinuoUpdateManyMutationInput, AtivoContinuoUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type AtivoUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: AtivoWhereUniqueInput
    update: XOR<AtivoUpdateWithoutCategoriaInput, AtivoUncheckedUpdateWithoutCategoriaInput>
    create: XOR<AtivoCreateWithoutCategoriaInput, AtivoUncheckedCreateWithoutCategoriaInput>
  }

  export type AtivoUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: AtivoWhereUniqueInput
    data: XOR<AtivoUpdateWithoutCategoriaInput, AtivoUncheckedUpdateWithoutCategoriaInput>
  }

  export type AtivoUpdateManyWithWhereWithoutCategoriaInput = {
    where: AtivoScalarWhereInput
    data: XOR<AtivoUpdateManyMutationInput, AtivoUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type DespesaCreateManyUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
  }

  export type DespesaContinuaCreateManyUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
  }

  export type AtivoCreateManyUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idCategoria: string
  }

  export type AtivoContinuoCreateManyUsuarioInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idCategoria: string
  }

  export type CategoriaAtivoCreateManyUsuarioInput = {
    id: string
    cores: string
  }

  export type CategoriaDespesaCreateManyUsuarioInput = {
    id: string
    cores: string
  }

  export type DespesaUpdateWithoutUsuarioInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    categoria?: CategoriaDespesaUpdateOneRequiredWithoutDespesasNestedInput
  }

  export type DespesaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type DespesaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type DespesaContinuaUpdateWithoutUsuarioInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    categoria?: CategoriaDespesaUpdateOneRequiredWithoutDespesasContinuasNestedInput
  }

  export type DespesaContinuaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type DespesaContinuaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type AtivoUpdateWithoutUsuarioInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    categoria?: CategoriaAtivoUpdateOneRequiredWithoutAtivosNestedInput
  }

  export type AtivoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type AtivoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type AtivoContinuoUpdateWithoutUsuarioInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    categoria?: CategoriaAtivoUpdateOneRequiredWithoutAtivosContinuosNestedInput
  }

  export type AtivoContinuoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type AtivoContinuoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idCategoria?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaAtivoUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    ativosContinuos?: AtivoContinuoUpdateManyWithoutCategoriaNestedInput
    ativos?: AtivoUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    ativosContinuos?: AtivoContinuoUncheckedUpdateManyWithoutCategoriaNestedInput
    ativos?: AtivoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaAtivoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaDespesaUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    despesasContinuas?: DespesaContinuaUpdateManyWithoutCategoriaNestedInput
    despesas?: DespesaUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
    despesasContinuas?: DespesaContinuaUncheckedUpdateManyWithoutCategoriaNestedInput
    despesas?: DespesaUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaDespesaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    cores?: StringFieldUpdateOperationsInput | string
  }

  export type DespesaContinuaCreateManyCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idUsuario: number
  }

  export type DespesaCreateManyCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idUsuario: number
  }

  export type DespesaContinuaUpdateWithoutCategoriaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    usuario?: UsuarioUpdateOneRequiredWithoutDespesasContinuasNestedInput
  }

  export type DespesaContinuaUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaContinuaUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaUpdateWithoutCategoriaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutDespesasNestedInput
  }

  export type DespesaUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type DespesaUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoContinuoCreateManyCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    mesComeco: number
    diaPagamento: number
    anualmente: boolean
    idUsuario: number
  }

  export type AtivoCreateManyCategoriaInput = {
    id?: number
    data: Date | string
    valor: number
    nome: string
    descricao: string
    idUsuario: number
  }

  export type AtivoContinuoUpdateWithoutCategoriaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    usuario?: UsuarioUpdateOneRequiredWithoutAtivosContinuosNestedInput
  }

  export type AtivoContinuoUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoContinuoUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    mesComeco?: IntFieldUpdateOperationsInput | number
    diaPagamento?: IntFieldUpdateOperationsInput | number
    anualmente?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoUpdateWithoutCategoriaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutAtivosNestedInput
  }

  export type AtivoUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type AtivoUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor?: FloatFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    idUsuario?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaDespesaCountOutputTypeDefaultArgs instead
     */
    export type CategoriaDespesaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaDespesaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaAtivoCountOutputTypeDefaultArgs instead
     */
    export type CategoriaAtivoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaAtivoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DespesaDefaultArgs instead
     */
    export type DespesaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DespesaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DespesaContinuaDefaultArgs instead
     */
    export type DespesaContinuaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DespesaContinuaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaDespesaDefaultArgs instead
     */
    export type CategoriaDespesaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaDespesaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AtivoDefaultArgs instead
     */
    export type AtivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AtivoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AtivoContinuoDefaultArgs instead
     */
    export type AtivoContinuoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AtivoContinuoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaAtivoDefaultArgs instead
     */
    export type CategoriaAtivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaAtivoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}